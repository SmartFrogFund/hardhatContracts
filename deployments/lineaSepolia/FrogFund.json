{
  "address": "0xAff3dAD48A1C1699A22ff685bE6F9592CdE79b33",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProgressReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "progress",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "ProgressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "RefundIssued",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approvalComments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorEthBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ethContributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getPlatformBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectInvestors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDistributed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "currentProgress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_comment",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "updateProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6e8319d635d7b86df58db7c229e1503fa394d34ba2df8f058b884ea45df93b6b",
  "receipt": {
    "to": null,
    "from": "0x2011862879eE9F98F593C79e5c14bB5325306d75",
    "contractAddress": "0xAff3dAD48A1C1699A22ff685bE6F9592CdE79b33",
    "transactionIndex": 0,
    "gasUsed": "3304574",
    "logsBloom": "0x
    "blockHash": "0x14e8140d742eecc10bae79aabeb7601d9c28d433055f3e73a9ce32c342f00c88",
    "transactionHash": "0x6e8319d635d7b86df58db7c229e1503fa394d34ba2df8f058b884ea45df93b6b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1705017,
        "transactionHash": "0x6e8319d635d7b86df58db7c229e1503fa394d34ba2df8f058b884ea45df93b6b",
        "address": "0xAff3dAD48A1C1699A22ff685bE6F9592CdE79b33",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x14e8140d742eecc10bae79aabeb7601d9c28d433055f3e73a9ce32c342f00c88"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1705017,
        "transactionHash": "0x6e8319d635d7b86df58db7c229e1503fa394d34ba2df8f058b884ea45df93b6b",
        "address": "0xAff3dAD48A1C1699A22ff685bE6F9592CdE79b33",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x14e8140d742eecc10bae79aabeb7601d9c28d433055f3e73a9ce32c342f00c88"
      }
    ],
    "blockNumber": 1705017,
    "cumulativeGasUsed": "3304574",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x085500B2462eC1B4f3A4fc40c29de9243533F5D6"
  ],
  "numDeployments": 6,
  "solcInputHash": "7e9431b20dacff62178f312bf68f49c9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProgressReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalComments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorEthBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPlatformBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDistributed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentProgress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"reviewProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartFrogFund.sol\":\"FrogFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartFrogFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract FrogFund is Ownable {\\r\\n    struct Project {\\r\\n        address payable creator; // \\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n        string title; // \\u9879\\u76ee\\u6807\\u9898\\r\\n        string description; // \\u9879\\u76ee\\u63cf\\u8ff0\\r\\n        string link; // \\u9879\\u76ee\\u94fe\\u63a5\\r\\n        uint256 goalAmount; // \\u76ee\\u6807\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 currentAmount; // \\u5f53\\u524d\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 amountDistributed; // \\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n        uint256 deadline; // \\u622a\\u6b62\\u65e5\\u671f\\r\\n        bool completed; // \\u9879\\u76ee\\u72b6\\u6001\\r\\n        uint256 currentProgress; // 0, 30, 50, 70, 100 \\u9879\\u76ee\\u8fdb\\u5ea6\\r\\n    }\\r\\n\\r\\n    IERC20 public token;\\r\\n    uint256 public projectCount = 0;\\r\\n    mapping(uint256 => Project) public projects;\\r\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\r\\n    mapping(uint256 => mapping(address => uint256)) public ethContributions;\\r\\n    mapping(uint256 => mapping(uint256 => string)) public progressDetails; // projectId => progress => details\\r\\n    mapping(uint256 => mapping(uint256 => string)) public approvalComments; // projectId => progress => comment\\r\\n    mapping(address => uint256) public creatorBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ERC20\\u4f59\\u989d\\r\\n    mapping(address => uint256) public creatorEthBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ETH\\u4f59\\u989d\\r\\n    mapping(uint256 => address[]) public projectInvestors; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u7684\\u6295\\u8d44\\u8005\\r\\n    modifier onlyInvestor(uint256 _projectId) {\\r\\n        require(\\r\\n            ethContributions[_projectId][msg.sender] > 0 ||\\r\\n                contributions[_projectId][msg.sender] > 0,\\r\\n            \\\"Caller is not an investor\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    event ProjectCreated(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed creator,\\r\\n        uint256 goalAmount,\\r\\n        uint256 deadline\\r\\n    );\\r\\n    event ProjectFunded(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressUpdated(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 progress,\\r\\n        string details\\r\\n    );\\r\\n    event FundsDistributed(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event RefundIssued(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressReviewed(\\r\\n        uint256 indexed projectId,\\r\\n        string comment,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\r\\n        token = IERC20(_tokenAddress);\\r\\n        transferOwnership(msg.sender);\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        string memory _title,\\r\\n        string memory _description,\\r\\n        string memory _link,\\r\\n        uint256 _goalAmount,\\r\\n        uint256 _deadline\\r\\n    ) external {\\r\\n        require(_goalAmount > 0, \\\"Goal amount must be greater than 0\\\");\\r\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\r\\n\\r\\n        projects[projectCount] = Project({\\r\\n            creator: payable(msg.sender),\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            link: _link,\\r\\n            goalAmount: _goalAmount,\\r\\n            currentAmount: 0,\\r\\n            deadline: _deadline,\\r\\n            completed: false,\\r\\n            currentProgress: 0,\\r\\n            amountDistributed: 0\\r\\n        });\\r\\n\\r\\n        emit ProjectCreated(projectCount, msg.sender, _goalAmount, _deadline);\\r\\n        projectCount++;\\r\\n    }\\r\\n\\r\\n    function supportProjectWithToken(\\r\\n        uint256 _projectId,\\r\\n        uint256 _amount\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"Token transfer failed\\\"\\r\\n        );\\r\\n\\r\\n        project.currentAmount += _amount;\\r\\n        contributions[_projectId][msg.sender] += _amount;\\r\\n\\r\\n        if (contributions[_projectId][msg.sender] == _amount) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, _amount, false);\\r\\n    }\\r\\n\\r\\n    function supportProjectWithEth(uint256 _projectId) external payable {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        project.currentAmount += msg.value;\\r\\n        ethContributions[_projectId][msg.sender] += msg.value;\\r\\n\\r\\n        if (ethContributions[_projectId][msg.sender] == msg.value) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n        if (project.currentAmount >= project.goalAmount) {\\r\\n            // \\u8fbe\\u5230\\u76ee\\u6807\\u91d1\\u989d\\r\\n            project.completed = true;\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, msg.value, true);\\r\\n    }\\r\\n\\r\\n    function updateProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _details\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress == 30 ||\\r\\n                _progress == 50 ||\\r\\n                _progress == 70 ||\\r\\n                _progress == 100,\\r\\n            \\\"Invalid progress value\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress > project.currentProgress,\\r\\n            \\\"Progress must be greater than current progress\\\"\\r\\n        );\\r\\n\\r\\n        project.currentProgress = _progress;\\r\\n        progressDetails[_projectId][_progress] = _details;\\r\\n\\r\\n        emit ProgressUpdated(_projectId, _progress, _details);\\r\\n    }\\r\\n\\r\\n    function reviewProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _comment,\\r\\n        bool _approved\\r\\n    ) external onlyInvestor(_projectId) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            project.currentProgress == _progress,\\r\\n            \\\"Progress does not match current project progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            project.currentAmount >= project.goalAmount,\\r\\n            \\\"Project has not reached goal amount\\\"\\r\\n        );\\r\\n\\r\\n        approvalComments[_projectId][_progress] = _comment;\\r\\n\\r\\n        if (_approved) {\\r\\n            // \\u8ba1\\u7b97\\u5e76\\u53d1\\u653e\\u8d44\\u91d1\\r\\n            distributeFunds(_projectId, _progress, project);\\r\\n\\r\\n            // \\u5206\\u914d\\u5956\\u52b1\\u7ed9\\u6295\\u8d44\\u4eba\\u548c\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            distributeRewards(_projectId, project);\\r\\n        } else {\\r\\n            project.currentProgress = _progress == 30\\r\\n                ? 0\\r\\n                : project.currentProgress - 20;\\r\\n        }\\r\\n\\r\\n        emit ProgressReviewed(_projectId, _comment, _approved);\\r\\n    }\\r\\n\\r\\n    function distributeFunds(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 totalAmountToDistribute = (project.goalAmount * _progress) /\\r\\n            100;\\r\\n        uint256 amountToDistribute = totalAmountToDistribute - project.amountDistributed;\\r\\n\\r\\n        if (amountToDistribute > 0) {\\r\\n            project.amountDistributed += amountToDistribute; // \\u66f4\\u65b0\\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n            creatorEthBalances[project.creator] += amountToDistribute; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaETH\\u4f59\\u989d\\r\\n            // \\u5b9e\\u9645\\u8f6c\\u79fbETH\\u5230\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            (bool success, ) = project.creator.call{value: amountToDistribute}(\\r\\n                \\\"\\\"\\r\\n            );\\r\\n            require(success, \\\"ETH transfer failed\\\");\\r\\n\\r\\n            emit FundsDistributed(_projectId, amountToDistribute, false);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function distributeRewards(\\r\\n        uint256 _projectId,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 reward = 1 * 10 ** 18; // \\u8bbe\\u7f6e\\u5956\\u52b1\\u6570\\u989d\\r\\n        // token.approve(address(this), reward);\\r\\n        address[] memory investors = projectInvestors[_projectId];\\r\\n        for (uint256 i = 0; i < investors.length; i++) {\\r\\n            address investor = investors[i];\\r\\n            if (ethContributions[_projectId][investor] > 0) {\\r\\n                require(\\r\\n                    token.transfer(investor, reward),\\r\\n                    \\\"Investor reward transfer failed\\\"\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        require(\\r\\n            token.transfer(project.creator, reward),\\r\\n            \\\"Creator reward transfer failed\\\"\\r\\n        );\\r\\n        creatorBalances[project.creator] += reward; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaERC20\\u4f59\\u989d\\r\\n    }\\r\\n\\r\\n    function updateProject(\\r\\n        uint256 _projectId,\\r\\n        uint256 _newGoalAmount,\\r\\n        uint256 _newDeadline\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update\\\"\\r\\n        );\\r\\n        require(!project.completed, \\\"Project is already completed\\\");\\r\\n\\r\\n        if (_newGoalAmount > 0) {\\r\\n            project.goalAmount = _newGoalAmount;\\r\\n        }\\r\\n        if (_newDeadline > block.timestamp) {\\r\\n            project.deadline = _newDeadline;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectDetails(\\r\\n        uint256 _projectId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (address, uint256, uint256, uint256, bool, uint256,uint256)\\r\\n    {\\r\\n        Project storage project = projects[_projectId];\\r\\n        return (\\r\\n            project.creator,\\r\\n            project.goalAmount,\\r\\n            project.currentAmount,\\r\\n            project.deadline,\\r\\n            project.completed,\\r\\n            project.currentProgress,\\r\\n            project.amountDistributed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getPlatformBalance(address _user) external view returns (uint256) {\\r\\n        uint256 totalTokenBalance = 0;\\r\\n        uint256 totalEthBalance = 0;\\r\\n        for (uint256 i = 0; i < projectCount; i++) {\\r\\n            totalTokenBalance += contributions[i][_user];\\r\\n            totalEthBalance += ethContributions[i][_user];\\r\\n        }\\r\\n        return totalTokenBalance + totalEthBalance;\\r\\n    }\\r\\n\\r\\n    function getCreatorBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorBalances[_creator];\\r\\n    }\\r\\n\\r\\n    function getCreatorEthBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorEthBalances[_creator];\\r\\n    }\\r\\n    function transferTokens(address to, uint256 value) external returns (bool) {\\r\\n        return token.transfer(to, value);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xe7401ad5852a274fa91735564311aab0a58a18811f547f3c713b2cf6d1a57895\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b5060405162003dfe38038062003dfe83398181016040528101906200003c9190620003b7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620003fa565b60405180910390fd5b620000c3816200011d60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011633620001e160201b60201c565b5062000417565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f16200027a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002665760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200025d9190620003fa565b60405180910390fd5b62000277816200011d60201b60201c565b50565b6200028a6200031c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002b06200032460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200031a57620002dc6200031c60201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620003119190620003fa565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200037f8262000352565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf6200034d565b5b6000620003e084828501620003a0565b91505092915050565b620003f48162000372565b82525050565b6000602082019050620004116000830184620003e9565b92915050565b6139d780620004276000396000f3fe60806040526004361061014b5760003560e01c80636a78c833116100b6578063b9b1060b1161006f578063b9b1060b146104ee578063bbbf146a1461052b578063bec3fa1714610554578063d5f2cf0514610591578063f2fde38b146105ce578063fc0c546a146105f75761014b565b80636a78c833146103e0578063715018a61461041d5780637a25f100146104345780638b44da951461045d5780638da5cb5b1461049a578063b93a5339146104c55761014b565b8063350d171711610108578063350d17171461029257806336fbad26146102cf5780633d891f59146102fa5780635955eb15146103375780635b325968146103605780635f8439e31461039d5761014b565b8063056c29ee1461015057806309cf7ffc14610179578063107046bd146101b65780631b5d5f81146101fc5780632a782802146102185780633170ee1d14610255575b600080fd5b34801561015c57600080fd5b50610177600480360381019061017291906123a7565b610622565b005b34801561018557600080fd5b506101a0600480360381019061019b91906124d4565b610870565b6040516101ad9190612510565b60405180910390f35b3480156101c257600080fd5b506101dd60048036038101906101d8919061252b565b6108b9565b6040516101f39a99989796959493929190612613565b60405180910390f35b6102166004803603810190610211919061252b565b610ad2565b005b34801561022457600080fd5b5061023f600480360381019061023a91906124d4565b610d43565b60405161024c9190612510565b60405180910390f35b34801561026157600080fd5b5061027c600480360381019061027791906124d4565b610d5b565b6040516102899190612510565b60405180910390f35b34801561029e57600080fd5b506102b960048036038101906102b491906126c4565b610e4f565b6040516102c69190612704565b60405180910390f35b3480156102db57600080fd5b506102e4610efc565b6040516102f19190612510565b60405180910390f35b34801561030657600080fd5b50610321600480360381019061031c9190612726565b610f02565b60405161032e9190612510565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190612766565b610f27565b005b34801561036c57600080fd5b50610387600480360381019061038291906124d4565b61104d565b6040516103949190612510565b60405180910390f35b3480156103a957600080fd5b506103c460048036038101906103bf919061252b565b611065565b6040516103d797969594939291906127c8565b60405180910390f35b3480156103ec57600080fd5b50610407600480360381019061040291906124d4565b6110f0565b6040516104149190612510565b60405180910390f35b34801561042957600080fd5b50610432611139565b005b34801561044057600080fd5b5061045b60048036038101906104569190612897565b61114d565b005b34801561046957600080fd5b50610484600480360381019061047f91906126c4565b611320565b604051610491919061290b565b60405180910390f35b3480156104a657600080fd5b506104af61136e565b6040516104bc919061290b565b60405180910390f35b3480156104d157600080fd5b506104ec60048036038101906104e79190612952565b611397565b005b3480156104fa57600080fd5b50610515600480360381019061051091906126c4565b6115f1565b6040516105229190612704565b60405180910390f35b34801561053757600080fd5b50610552600480360381019061054d91906126c4565b61169e565b005b34801561056057600080fd5b5061057b600480360381019061057691906129da565b6119c4565b6040516105889190612a1a565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b39190612726565b611a6e565b6040516105c59190612510565b60405180910390f35b3480156105da57600080fd5b506105f560048036038101906105f091906124d4565b611a93565b005b34801561060357600080fd5b5061060c611b19565b6040516106199190612a94565b60405180910390f35b60008211610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90612b21565b60405180910390fd5b4281116106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90612b8d565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161077a9190612daf565b5060408201518160020190816107909190612daf565b5060608201518160030190816107a69190612daf565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fb5d890eb2df709d2f732ed81f328b444e49c1618ed8d64c53c0a040ec4040e1e8484604051610849929190612e81565b60405180910390a36002600081548092919061086490612ed9565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461090290612bdc565b80601f016020809104026020016040519081016040528092919081815260200182805461092e90612bdc565b801561097b5780601f106109505761010080835404028352916020019161097b565b820191906000526020600020905b81548152906001019060200180831161095e57829003601f168201915b50505050509080600201805461099090612bdc565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90612bdc565b8015610a095780601f106109de57610100808354040283529160200191610a09565b820191906000526020600020905b8154815290600101906020018083116109ec57829003601f168201915b505050505090806003018054610a1e90612bdc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90612bdc565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b600060036000838152602001908152602001600020905080600701544210610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690612f6d565b60405180910390fd5b60003411610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6990612fd9565b60405180910390fd5b34816005016000828254610b869190612ff9565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bed9190612ff9565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610cc057600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610ced5760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610d3792919061302d565b60405180910390a35050565b60086020528060005260406000206000915090505481565b600080600090506000805b600254811015610e39576004600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610dcc9190612ff9565b92506005600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610e2a9190612ff9565b91508080600101915050610d66565b508082610e469190612ff9565b92505050919050565b6007602052816000526040600020602052806000526040600020600091509150508054610e7b90612bdc565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea790612bdc565b8015610ef45780601f10610ec957610100808354040283529160200191610ef4565b820191906000526020600020905b815481529060010190602001808311610ed757829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc7906130a2565b60405180910390fd5b8060080160009054906101000a900460ff1615611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110199061310e565b60405180910390fd5b6000831115611035578281600401819055505b42821115611047578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611141611b3f565b61114b6000611bc6565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed906131a0565b60405180910390fd5b601e8414806112055750603284145b806112105750604684145b8061121b5750606484145b61125a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112519061320c565b60405180910390fd5b806009015484116112a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112979061329e565b60405180910390fd5b838160090181905550828260066000888152602001908152602001600020600087815260200190815260200160002091826112dc9291906132c9565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c1858585604051611311939291906133c6565b60405180910390a25050505050565b600a602052816000526040600020818154811061133c57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180611447575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d90613444565b60405180910390fd5b6000600360008881526020019081526020016000209050858160090154146114e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114da906134d6565b60405180910390fd5b80600401548160050154101561152e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152590613568565b60405180910390fd5b8484600760008a8152602001908152602001600020600089815260200190815260200160002091826115619291906132c9565b50821561158257611573878783611c8a565b61157d8782611e70565b6115ac565b601e86146115a0576014816009015461159b9190613588565b6115a3565b60005b81600901819055505b867fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a08686866040516115e0939291906135bc565b60405180910390a250505050505050565b600660205281600052604060002060205280600052604060002060009150915050805461161d90612bdc565b80601f016020809104026020016040519081016040528092919081815260200182805461164990612bdc565b80156116965780601f1061166b57610100808354040283529160200191611696565b820191906000526020600020905b81548152906001019060200180831161167957829003601f168201915b505050505081565b6000600360008481526020019081526020016000209050806007015442106116fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f290612f6d565b60405180910390fd5b6000821161173e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173590612fd9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161179d939291906135ee565b6020604051808303816000875af11580156117bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e0919061363a565b61181f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611816906136b3565b60405180910390fd5b818160050160008282546118339190612ff9565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461189a9190612ff9565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361196d57600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f8460006040516119b792919061302d565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611a239291906136d3565b6020604051808303816000875af1158015611a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a66919061363a565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b611a9b611b3f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b0d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611b04919061290b565b60405180910390fd5b611b1681611bc6565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b4761220f565b73ffffffffffffffffffffffffffffffffffffffff16611b6561136e565b73ffffffffffffffffffffffffffffffffffffffff1614611bc457611b8861220f565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bbb919061290b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006064838360040154611c9e91906136fc565b611ca8919061376d565b90506000826006015482611cbc9190613588565b90506000811115611e695780836006016000828254611cdb9190612ff9565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d559190612ff9565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051611da6906137cf565b60006040518083038185875af1925050503d8060008114611de3576040519150601f19603f3d011682016040523d82523d6000602084013e611de8565b606091505b5050905080611e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2390613830565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e836000604051611e5f92919061302d565b60405180910390a2505b5050505050565b6000670de0b6b3a764000090506000600a6000858152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611f1257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ec8575b5050505050905060005b815181101561208b576000828281518110611f3a57611f39613850565b5b6020026020010151905060006005600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561207d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82866040518363ffffffff1660e01b8152600401611ffa9291906136d3565b6020604051808303816000875af1158015612019573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061203d919061363a565b61207c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612073906138cb565b60405180910390fd5b5b508080600101915050611f1c565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161210d92919061390c565b6020604051808303816000875af115801561212c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612150919061363a565b61218f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218690613981565b60405180910390fd5b81600860008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122029190612ff9565b9250508190555050505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61227e82612235565b810181811067ffffffffffffffff8211171561229d5761229c612246565b5b80604052505050565b60006122b0612217565b90506122bc8282612275565b919050565b600067ffffffffffffffff8211156122dc576122db612246565b5b6122e582612235565b9050602081019050919050565b82818337600083830152505050565b600061231461230f846122c1565b6122a6565b9050828152602081018484840111156123305761232f612230565b5b61233b8482856122f2565b509392505050565b600082601f8301126123585761235761222b565b5b8135612368848260208601612301565b91505092915050565b6000819050919050565b61238481612371565b811461238f57600080fd5b50565b6000813590506123a18161237b565b92915050565b600080600080600060a086880312156123c3576123c2612221565b5b600086013567ffffffffffffffff8111156123e1576123e0612226565b5b6123ed88828901612343565b955050602086013567ffffffffffffffff81111561240e5761240d612226565b5b61241a88828901612343565b945050604086013567ffffffffffffffff81111561243b5761243a612226565b5b61244788828901612343565b935050606061245888828901612392565b925050608061246988828901612392565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124a182612476565b9050919050565b6124b181612496565b81146124bc57600080fd5b50565b6000813590506124ce816124a8565b92915050565b6000602082840312156124ea576124e9612221565b5b60006124f8848285016124bf565b91505092915050565b61250a81612371565b82525050565b60006020820190506125256000830184612501565b92915050565b60006020828403121561254157612540612221565b5b600061254f84828501612392565b91505092915050565b600061256382612476565b9050919050565b61257381612558565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156125b3578082015181840152602081019050612598565b60008484015250505050565b60006125ca82612579565b6125d48185612584565b93506125e4818560208601612595565b6125ed81612235565b840191505092915050565b60008115159050919050565b61260d816125f8565b82525050565b600061014082019050612629600083018d61256a565b818103602083015261263b818c6125bf565b9050818103604083015261264f818b6125bf565b90508181036060830152612663818a6125bf565b90506126726080830189612501565b61267f60a0830188612501565b61268c60c0830187612501565b61269960e0830186612501565b6126a7610100830185612604565b6126b5610120830184612501565b9b9a5050505050505050505050565b600080604083850312156126db576126da612221565b5b60006126e985828601612392565b92505060206126fa85828601612392565b9150509250929050565b6000602082019050818103600083015261271e81846125bf565b905092915050565b6000806040838503121561273d5761273c612221565b5b600061274b85828601612392565b925050602061275c858286016124bf565b9150509250929050565b60008060006060848603121561277f5761277e612221565b5b600061278d86828701612392565b935050602061279e86828701612392565b92505060406127af86828701612392565b9150509250925092565b6127c281612496565b82525050565b600060e0820190506127dd600083018a6127b9565b6127ea6020830189612501565b6127f76040830188612501565b6128046060830187612501565b6128116080830186612604565b61281e60a0830185612501565b61282b60c0830184612501565b98975050505050505050565b600080fd5b600080fd5b60008083601f8401126128575761285661222b565b5b8235905067ffffffffffffffff81111561287457612873612837565b5b6020830191508360018202830111156128905761288f61283c565b5b9250929050565b600080600080606085870312156128b1576128b0612221565b5b60006128bf87828801612392565b94505060206128d087828801612392565b935050604085013567ffffffffffffffff8111156128f1576128f0612226565b5b6128fd87828801612841565b925092505092959194509250565b600060208201905061292060008301846127b9565b92915050565b61292f816125f8565b811461293a57600080fd5b50565b60008135905061294c81612926565b92915050565b60008060008060006080868803121561296e5761296d612221565b5b600061297c88828901612392565b955050602061298d88828901612392565b945050604086013567ffffffffffffffff8111156129ae576129ad612226565b5b6129ba88828901612841565b935093505060606129cd8882890161293d565b9150509295509295909350565b600080604083850312156129f1576129f0612221565b5b60006129ff858286016124bf565b9250506020612a1085828601612392565b9150509250929050565b6000602082019050612a2f6000830184612604565b92915050565b6000819050919050565b6000612a5a612a55612a5084612476565b612a35565b612476565b9050919050565b6000612a6c82612a3f565b9050919050565b6000612a7e82612a61565b9050919050565b612a8e81612a73565b82525050565b6000602082019050612aa96000830184612a85565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b0b602283612584565b9150612b1682612aaf565b604082019050919050565b60006020820190508181036000830152612b3a81612afe565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b6000612b77601e83612584565b9150612b8282612b41565b602082019050919050565b60006020820190508181036000830152612ba681612b6a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612bf457607f821691505b602082108103612c0757612c06612bad565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612c6f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c32565b612c798683612c32565b95508019841693508086168417925050509392505050565b6000612cac612ca7612ca284612371565b612a35565b612371565b9050919050565b6000819050919050565b612cc683612c91565b612cda612cd282612cb3565b848454612c3f565b825550505050565b600090565b612cef612ce2565b612cfa818484612cbd565b505050565b5b81811015612d1e57612d13600082612ce7565b600181019050612d00565b5050565b601f821115612d6357612d3481612c0d565b612d3d84612c22565b81016020851015612d4c578190505b612d60612d5885612c22565b830182612cff565b50505b505050565b600082821c905092915050565b6000612d8660001984600802612d68565b1980831691505092915050565b6000612d9f8383612d75565b9150826002028217905092915050565b612db882612579565b67ffffffffffffffff811115612dd157612dd0612246565b5b612ddb8254612bdc565b612de6828285612d22565b600060209050601f831160018114612e195760008415612e07578287015190505b612e118582612d93565b865550612e79565b601f198416612e2786612c0d565b60005b82811015612e4f57848901518255600182019150602085019450602081019050612e2a565b86831015612e6c5784890151612e68601f891682612d75565b8355505b6001600288020188555050505b505050505050565b6000604082019050612e966000830185612501565b612ea36020830184612501565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ee482612371565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f1657612f15612eaa565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b6000612f57601e83612584565b9150612f6282612f21565b602082019050919050565b60006020820190508181036000830152612f8681612f4a565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000612fc3601d83612584565b9150612fce82612f8d565b602082019050919050565b60006020820190508181036000830152612ff281612fb6565b9050919050565b600061300482612371565b915061300f83612371565b925082820190508082111561302757613026612eaa565b5b92915050565b60006040820190506130426000830185612501565b61304f6020830184612604565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b600061308c601f83612584565b915061309782613056565b602082019050919050565b600060208201905081810360008301526130bb8161307f565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b60006130f8601c83612584565b9150613103826130c2565b602082019050919050565b60006020820190508181036000830152613127816130eb565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b600061318a602883612584565b91506131958261312e565b604082019050919050565b600060208201905081810360008301526131b98161317d565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b60006131f6601683612584565b9150613201826131c0565b602082019050919050565b60006020820190508181036000830152613225816131e9565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b6000613288602e83612584565b91506132938261322c565b604082019050919050565b600060208201905081810360008301526132b78161327b565b9050919050565b600082905092915050565b6132d383836132be565b67ffffffffffffffff8111156132ec576132eb612246565b5b6132f68254612bdc565b613301828285612d22565b6000601f831160018114613330576000841561331e578287013590505b6133288582612d93565b865550613390565b601f19841661333e86612c0d565b60005b8281101561336657848901358255600182019150602085019450602081019050613341565b86831015613383578489013561337f601f891682612d75565b8355505b6001600288020188555050505b50505050505050565b60006133a58385612584565b93506133b28385846122f2565b6133bb83612235565b840190509392505050565b60006040820190506133db6000830186612501565b81810360208301526133ee818486613399565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b600061342e601983612584565b9150613439826133f8565b602082019050919050565b6000602082019050818103600083015261345d81613421565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b60006134c0603083612584565b91506134cb82613464565b604082019050919050565b600060208201905081810360008301526134ef816134b3565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613552602383612584565b915061355d826134f6565b604082019050919050565b6000602082019050818103600083015261358181613545565b9050919050565b600061359382612371565b915061359e83612371565b92508282039050818111156135b6576135b5612eaa565b5b92915050565b600060408201905081810360008301526135d7818587613399565b90506135e66020830184612604565b949350505050565b600060608201905061360360008301866127b9565b61361060208301856127b9565b61361d6040830184612501565b949350505050565b60008151905061363481612926565b92915050565b6000602082840312156136505761364f612221565b5b600061365e84828501613625565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b600061369d601583612584565b91506136a882613667565b602082019050919050565b600060208201905081810360008301526136cc81613690565b9050919050565b60006040820190506136e860008301856127b9565b6136f56020830184612501565b9392505050565b600061370782612371565b915061371283612371565b925082820261372081612371565b9150828204841483151761373757613736612eaa565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061377882612371565b915061378383612371565b9250826137935761379261373e565b5b828204905092915050565b600081905092915050565b50565b60006137b960008361379e565b91506137c4826137a9565b600082019050919050565b60006137da826137ac565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b600061381a601383612584565b9150613825826137e4565b602082019050919050565b600060208201905081810360008301526138498161380d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b60006138b5601f83612584565b91506138c08261387f565b602082019050919050565b600060208201905081810360008301526138e4816138a8565b9050919050565b60006138f682612a61565b9050919050565b613906816138eb565b82525050565b600060408201905061392160008301856138fd565b61392e6020830184612501565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b600061396b601e83612584565b915061397682613935565b602082019050919050565b6000602082019050818103600083015261399a8161395e565b905091905056fea2646970667358221220b3fc49872f371ad98cc63e0302e6d58634d665650522b4128bbb1e60339fdf8e64736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 285,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 288,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 293,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)282_storage)"
      },
      {
        "astId": 299,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "contributions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "ethContributions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 311,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDetails",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 317,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "approvalComments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 321,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorBalances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorEthBalances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectInvestors",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Project)282_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FrogFund.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)282_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)282_storage": {
        "encoding": "inplace",
        "label": "struct FrogFund.Project",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 265,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "link",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "goalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "amountDistributed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "deadline",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 281,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentProgress",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}