{
  "address": "0xA323D15b9fE90c2D0F570635B07d03e0d25C75C1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProgressReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "progress",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "ProgressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "RefundIssued",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approvalComments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "canSubmitNextProgress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorEthBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ethContributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "getInvestors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getPlatformBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDisapprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectInvestors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDistributed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "currentProgress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_comment",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "updateProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x83f328768d5eeaed96b403bfbc88d5e4ccc9c0a592a74f58cbd31dd53171975d",
  "receipt": {
    "to": null,
    "from": "0x2011862879eE9F98F593C79e5c14bB5325306d75",
    "contractAddress": "0xA323D15b9fE90c2D0F570635B07d03e0d25C75C1",
    "transactionIndex": 0,
    "gasUsed": "3673234",
    "logsBloom": "0x
    "blockHash": "0x400e507ecc73cdb250c6d4f4ea20e3d07a2b9d05134ea846669466bb3e80ee83",
    "transactionHash": "0x83f328768d5eeaed96b403bfbc88d5e4ccc9c0a592a74f58cbd31dd53171975d",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1755998,
        "transactionHash": "0x83f328768d5eeaed96b403bfbc88d5e4ccc9c0a592a74f58cbd31dd53171975d",
        "address": "0xA323D15b9fE90c2D0F570635B07d03e0d25C75C1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x400e507ecc73cdb250c6d4f4ea20e3d07a2b9d05134ea846669466bb3e80ee83"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1755998,
        "transactionHash": "0x83f328768d5eeaed96b403bfbc88d5e4ccc9c0a592a74f58cbd31dd53171975d",
        "address": "0xA323D15b9fE90c2D0F570635B07d03e0d25C75C1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75",
          "0x0000000000000000000000002011862879ee9f98f593c79e5c14bb5325306d75"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x400e507ecc73cdb250c6d4f4ea20e3d07a2b9d05134ea846669466bb3e80ee83"
      }
    ],
    "blockNumber": 1755998,
    "cumulativeGasUsed": "3673234",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xCe0c9040A10275BDc6856e5C2077AC4F9338f826"
  ],
  "numDeployments": 1,
  "solcInputHash": "1171e667b24e40b22e19ef274f952d69",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProgressReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalComments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"canSubmitNextProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorEthBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"getInvestors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPlatformBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDisapprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDistributed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentProgress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"reviewProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartFrogFund.sol\":\"FrogFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartFrogFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract FrogFund is Ownable {\\r\\n    struct Project {\\r\\n        address payable creator; // \\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n        string title; // \\u9879\\u76ee\\u6807\\u9898\\r\\n        string description; // \\u9879\\u76ee\\u63cf\\u8ff0\\r\\n        string link; // \\u9879\\u76ee\\u94fe\\u63a5\\r\\n        uint256 goalAmount; // \\u76ee\\u6807\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 currentAmount; // \\u5f53\\u524d\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 amountDistributed; // \\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n        uint256 deadline; // \\u622a\\u6b62\\u65e5\\u671f\\r\\n        bool completed; // \\u9879\\u76ee\\u72b6\\u6001\\r\\n        uint256 currentProgress; // 0, 30, 50, 70, 100 \\u9879\\u76ee\\u8fdb\\u5ea6\\r\\n    }\\r\\n\\r\\n    IERC20 public token;\\r\\n    uint256 public projectCount = 0;\\r\\n    mapping(uint256 => Project) public projects;\\r\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\r\\n    mapping(uint256 => mapping(address => uint256)) public ethContributions;\\r\\n    mapping(uint256 => mapping(uint256 => string)) public progressDetails; // projectId => progress => details\\r\\n    mapping(uint256 => mapping(uint256 => string)) public approvalComments; // projectId => progress => comment\\r\\n    mapping(address => uint256) public creatorBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ERC20\\u4f59\\u989d\\r\\n    mapping(address => uint256) public creatorEthBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ETH\\u4f59\\u989d\\r\\n    mapping(uint256 => address[]) public projectInvestors; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u7684\\u6295\\u8d44\\u8005\\r\\n\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) public progressApprovals; // projectId => progress => approval count\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) public progressDisapprovals; // projectId => progress => disapproval count\\r\\n\\r\\n    modifier onlyInvestor(uint256 _projectId) {\\r\\n        require(\\r\\n            ethContributions[_projectId][msg.sender] > 0 ||\\r\\n                contributions[_projectId][msg.sender] > 0,\\r\\n            \\\"Caller is not an investor\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    event ProjectCreated(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed creator,\\r\\n        uint256 goalAmount,\\r\\n        uint256 deadline\\r\\n    );\\r\\n    event ProjectFunded(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressUpdated(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 progress,\\r\\n        string details\\r\\n    );\\r\\n    event FundsDistributed(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event RefundIssued(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressReviewed(\\r\\n        uint256 indexed projectId,\\r\\n        string comment,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\r\\n        token = IERC20(_tokenAddress);\\r\\n        transferOwnership(msg.sender);\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        string memory _title,\\r\\n        string memory _description,\\r\\n        string memory _link,\\r\\n        uint256 _goalAmount,\\r\\n        uint256 _deadline\\r\\n    ) external {\\r\\n        require(_goalAmount > 0, \\\"Goal amount must be greater than 0\\\");\\r\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\r\\n\\r\\n        projects[projectCount] = Project({\\r\\n            creator: payable(msg.sender),\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            link: _link,\\r\\n            goalAmount: _goalAmount,\\r\\n            currentAmount: 0,\\r\\n            deadline: _deadline,\\r\\n            completed: false,\\r\\n            currentProgress: 0,\\r\\n            amountDistributed: 0\\r\\n        });\\r\\n\\r\\n        emit ProjectCreated(projectCount, msg.sender, _goalAmount, _deadline);\\r\\n        projectCount++;\\r\\n    }\\r\\n\\r\\n    function supportProjectWithToken(\\r\\n        uint256 _projectId,\\r\\n        uint256 _amount\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"Token transfer failed\\\"\\r\\n        );\\r\\n\\r\\n        project.currentAmount += _amount;\\r\\n        contributions[_projectId][msg.sender] += _amount;\\r\\n\\r\\n        if (contributions[_projectId][msg.sender] == _amount) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, _amount, false);\\r\\n    }\\r\\n\\r\\n    function supportProjectWithEth(uint256 _projectId) external payable {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        project.currentAmount += msg.value;\\r\\n        ethContributions[_projectId][msg.sender] += msg.value;\\r\\n\\r\\n        if (ethContributions[_projectId][msg.sender] == msg.value) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n        if (project.currentAmount >= project.goalAmount) {\\r\\n            // \\u8fbe\\u5230\\u76ee\\u6807\\u91d1\\u989d\\r\\n            project.completed = true;\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, msg.value, true);\\r\\n    }\\r\\n\\r\\n    function updateProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _details\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress == 30 ||\\r\\n                _progress == 50 ||\\r\\n                _progress == 70 ||\\r\\n                _progress == 100,\\r\\n            \\\"Invalid progress value\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress > project.currentProgress,\\r\\n            \\\"Progress must be greater than current progress\\\"\\r\\n        );\\r\\n        if (project.currentProgress > 0) {\\r\\n            uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n            uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n            require(\\r\\n                progressApprovals[_projectId][project.currentProgress] >=\\r\\n                    requiredApprovals,\\r\\n                \\\"Current progress has not been approved by the majority of investors\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        project.currentProgress = _progress;\\r\\n        progressDetails[_projectId][_progress] = _details;\\r\\n\\r\\n        emit ProgressUpdated(_projectId, _progress, _details);\\r\\n    }\\r\\n\\r\\n    function reviewProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _comment,\\r\\n        bool _approved\\r\\n    ) external onlyInvestor(_projectId) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            project.currentProgress == _progress,\\r\\n            \\\"Progress does not match current project progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            project.currentAmount >= project.goalAmount,\\r\\n            \\\"Project has not reached goal amount\\\"\\r\\n        );\\r\\n\\r\\n        approvalComments[_projectId][_progress] = _comment;\\r\\n\\r\\n        uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n        uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n\\r\\n        if (_approved) {\\r\\n            progressApprovals[_projectId][_progress]++;\\r\\n            if (progressApprovals[_projectId][_progress] >= requiredApprovals) {\\r\\n                distributeFunds(_projectId, _progress, project);\\r\\n            }\\r\\n            distributeRewards(_projectId, project, msg.sender);\\r\\n        } else {\\r\\n            progressDisapprovals[_projectId][_progress]++;\\r\\n            if (\\r\\n                progressDisapprovals[_projectId][_progress] > totalInvestors / 2\\r\\n            ) {\\r\\n                // \\u56de\\u9000\\u8fdb\\u5ea6\\r\\n                project.currentProgress = _progress == 30\\r\\n                    ? 0\\r\\n                    : project.currentProgress - 20;\\r\\n                // \\u6e05\\u7a7a\\u4e4b\\u524d\\u9636\\u6bb5\\u7684\\u5ba1\\u6279\\u8bb0\\u5f55\\r\\n                clearProgressRecords(_projectId, _progress);\\r\\n            }\\r\\n        }\\r\\n        emit ProgressReviewed(_projectId, _comment, _approved);\\r\\n    }\\r\\n    function clearProgressRecords(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress\\r\\n    ) internal {\\r\\n        progressApprovals[_projectId][_progress] = 0;\\r\\n        progressDisapprovals[_projectId][_progress] = 0;\\r\\n    }\\r\\n    function getRequiredApprovals(\\r\\n        uint256 totalInvestors\\r\\n    ) internal pure returns (uint256) {\\r\\n        return (totalInvestors + 1) / 2; // \\u786e\\u4fdd\\u81f3\\u5c11\\u8fbe\\u5230\\u603b\\u6295\\u8d44\\u4eba\\u6570\\u7684\\u4e00\\u534a\\r\\n    }\\r\\n    function distributeFunds(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 totalAmountToDistribute = (project.goalAmount * _progress) /\\r\\n            100;\\r\\n        uint256 amountToDistribute = totalAmountToDistribute -\\r\\n            project.amountDistributed;\\r\\n\\r\\n        if (amountToDistribute > 0) {\\r\\n            project.amountDistributed += amountToDistribute; // \\u66f4\\u65b0\\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n            creatorEthBalances[project.creator] += amountToDistribute; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaETH\\u4f59\\u989d\\r\\n            // \\u5b9e\\u9645\\u8f6c\\u79fbETH\\u5230\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            bool success = project.creator.send(amountToDistribute);\\r\\n            require(success, \\\"ETH transfer failed\\\");\\r\\n\\r\\n            emit FundsDistributed(_projectId, amountToDistribute, false);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function distributeRewards(\\r\\n        uint256 _projectId,\\r\\n        Project storage project,\\r\\n        address caller\\r\\n    ) internal {\\r\\n        uint256 reward = 1 * 10 ** 18; // \\u8bbe\\u7f6e\\u5956\\u52b1\\u6570\\u989d\\r\\n        // token.approve(address(this), reward);\\r\\n        address[] memory investors = projectInvestors[_projectId];\\r\\n        // for (uint256 i = 0; i < investors.length; i++) {\\r\\n        // address investor = investors[i];\\r\\n        require(ethContributions[_projectId][msg.sender] > 0, \\\"no amount\\\");\\r\\n        if (ethContributions[_projectId][msg.sender] > 0) {\\r\\n            require(\\r\\n                token.transfer(msg.sender, reward),\\r\\n                \\\"Investor reward transfer failed\\\"\\r\\n            );\\r\\n        }\\r\\n        // }\\r\\n        require(\\r\\n            token.transfer(project.creator, reward),\\r\\n            \\\"Creator reward transfer failed\\\"\\r\\n        );\\r\\n        creatorBalances[project.creator] += reward; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaERC20\\u4f59\\u989d\\r\\n    }\\r\\n\\r\\n    function updateProject(\\r\\n        uint256 _projectId,\\r\\n        uint256 _newGoalAmount,\\r\\n        uint256 _newDeadline\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update\\\"\\r\\n        );\\r\\n        require(!project.completed, \\\"Project is already completed\\\");\\r\\n\\r\\n        if (_newGoalAmount > 0) {\\r\\n            project.goalAmount = _newGoalAmount;\\r\\n        }\\r\\n        if (_newDeadline > block.timestamp) {\\r\\n            project.deadline = _newDeadline;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectDetails(\\r\\n        uint256 _projectId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (address, uint256, uint256, uint256, bool, uint256, uint256)\\r\\n    {\\r\\n        Project storage project = projects[_projectId];\\r\\n        return (\\r\\n            project.creator,\\r\\n            project.goalAmount,\\r\\n            project.currentAmount,\\r\\n            project.deadline,\\r\\n            project.completed,\\r\\n            project.currentProgress,\\r\\n            project.amountDistributed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getPlatformBalance(\\r\\n        address _user\\r\\n    ) external view returns (uint256, uint256) {\\r\\n        uint256 totalTokenBalance = 0;\\r\\n        uint256 totalEthBalance = 0;\\r\\n        for (uint256 i = 0; i < projectCount; i++) {\\r\\n            totalTokenBalance += contributions[i][_user];\\r\\n            totalEthBalance += ethContributions[i][_user];\\r\\n        }\\r\\n        return (totalTokenBalance, totalEthBalance);\\r\\n    }\\r\\n\\r\\n    function getCreatorBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorBalances[_creator];\\r\\n    }\\r\\n\\r\\n    function getCreatorEthBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorEthBalances[_creator];\\r\\n    }\\r\\n    function transferTokens(address to, uint256 value) external returns (bool) {\\r\\n        return token.transfer(to, value);\\r\\n    }\\r\\n    function canSubmitNextProgress(\\r\\n        uint256 _projectId\\r\\n    ) external view returns (bool) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n        uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n\\r\\n        if (project.currentProgress == 0) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        return\\r\\n            progressApprovals[_projectId][project.currentProgress] >=\\r\\n            requiredApprovals;\\r\\n    }\\r\\n    function getInvestors(\\r\\n        uint256 projectId\\r\\n    ) public view returns (address[] memory) {\\r\\n        return projectInvestors[projectId];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd8592a6da231bcd02e0f29722cca99a42a2998eab5f125e63e903a51160913b2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b50604051620044b0380380620044b083398181016040528101906200003c9190620003b7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620003fa565b60405180910390fd5b620000c3816200011d60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011633620001e160201b60201c565b5062000417565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f16200027a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002665760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200025d9190620003fa565b60405180910390fd5b62000277816200011d60201b60201c565b50565b6200028a6200031c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002b06200032460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200031a57620002dc6200031c60201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620003119190620003fa565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200037f8262000352565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf6200034d565b5b6000620003e084828501620003a0565b91505092915050565b620003f48162000372565b82525050565b6000602082019050620004116000830184620003e9565b92915050565b61408980620004276000396000f3fe6080604052600436106101b75760003560e01c80636a78c833116100ec578063b9b1060b1161008a578063d5f2cf0511610064578063d5f2cf05146106b5578063dd5862e5146106f2578063f2fde38b1461072f578063fc0c546a14610758576101b7565b8063b9b1060b14610612578063bbbf146a1461064f578063bec3fa1714610678576101b7565b80638b44da95116100c65780638b44da95146105445780638da5cb5b14610581578063aff5eaee146105ac578063b93a5339146105e9576101b7565b80636a78c833146104c7578063715018a6146105045780637a25f1001461051b576101b7565b8063350d171711610159578063523db93911610133578063523db939146103e15780635955eb151461041e5780635b325968146104475780635f8439e314610484576101b7565b8063350d17171461033c57806336fbad26146103795780633d891f59146103a4576101b7565b80631139de55116101955780631139de55146102685780631b5d5f81146102a55780632a782802146102c15780633170ee1d146102fe576101b7565b8063056c29ee146101bc57806309cf7ffc146101e5578063107046bd14610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de91906128ca565b610783565b005b3480156101f157600080fd5b5061020c600480360381019061020791906129f7565b6109d1565b6040516102199190612a33565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612a4e565b610a1a565b60405161025f9a99989796959493929190612b36565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a9190612a4e565b610c33565b60405161029c9190612ca5565b60405180910390f35b6102bf60048036038101906102ba9190612a4e565b610cd4565b005b3480156102cd57600080fd5b506102e860048036038101906102e391906129f7565b610f45565b6040516102f59190612a33565b60405180910390f35b34801561030a57600080fd5b50610325600480360381019061032091906129f7565b610f5d565b604051610333929190612cc7565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612cf0565b611047565b6040516103709190612d30565b60405180910390f35b34801561038557600080fd5b5061038e6110f4565b60405161039b9190612a33565b60405180910390f35b3480156103b057600080fd5b506103cb60048036038101906103c69190612d52565b6110fa565b6040516103d89190612a33565b60405180910390f35b3480156103ed57600080fd5b5061040860048036038101906104039190612cf0565b61111f565b6040516104159190612a33565b60405180910390f35b34801561042a57600080fd5b5061044560048036038101906104409190612d92565b611144565b005b34801561045357600080fd5b5061046e600480360381019061046991906129f7565b61126a565b60405161047b9190612a33565b60405180910390f35b34801561049057600080fd5b506104ab60048036038101906104a69190612a4e565b611282565b6040516104be9796959493929190612df4565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e991906129f7565b61130d565b6040516104fb9190612a33565b60405180910390f35b34801561051057600080fd5b50610519611356565b005b34801561052757600080fd5b50610542600480360381019061053d9190612ec3565b61136a565b005b34801561055057600080fd5b5061056b60048036038101906105669190612cf0565b6115e0565b6040516105789190612f37565b60405180910390f35b34801561058d57600080fd5b5061059661162e565b6040516105a39190612f37565b60405180910390f35b3480156105b857600080fd5b506105d360048036038101906105ce9190612a4e565b611657565b6040516105e09190612f52565b60405180910390f35b3480156105f557600080fd5b50610610600480360381019061060b9190612f99565b6116e6565b005b34801561061e57600080fd5b5061063960048036038101906106349190612cf0565b611a4e565b6040516106469190612d30565b60405180910390f35b34801561065b57600080fd5b5061067660048036038101906106719190612cf0565b611afb565b005b34801561068457600080fd5b5061069f600480360381019061069a9190613021565b611e21565b6040516106ac9190612f52565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190612d52565b611ecb565b6040516106e99190612a33565b60405180910390f35b3480156106fe57600080fd5b5061071960048036038101906107149190612cf0565b611ef0565b6040516107269190612a33565b60405180910390f35b34801561073b57600080fd5b50610756600480360381019061075191906129f7565b611f15565b005b34801561076457600080fd5b5061076d611f9b565b60405161077a91906130c0565b60405180910390f35b600082116107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd9061314d565b60405180910390fd5b428111610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906131b9565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816108db91906133db565b5060408201518160020190816108f191906133db565b50606082015181600301908161090791906133db565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fb5d890eb2df709d2f732ed81f328b444e49c1618ed8d64c53c0a040ec4040e1e84846040516109aa929190612cc7565b60405180910390a3600260008154809291906109c5906134dc565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610a6390613208565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8f90613208565b8015610adc5780601f10610ab157610100808354040283529160200191610adc565b820191906000526020600020905b815481529060010190602001808311610abf57829003601f168201915b505050505090806002018054610af190613208565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1d90613208565b8015610b6a5780601f10610b3f57610100808354040283529160200191610b6a565b820191906000526020600020905b815481529060010190602001808311610b4d57829003601f168201915b505050505090806003018054610b7f90613208565b80601f0160208091040260200160405190810160405280929190818152602001828054610bab90613208565b8015610bf85780601f10610bcd57610100808354040283529160200191610bf8565b820191906000526020600020905b815481529060010190602001808311610bdb57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b6060600a6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610cc857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c7e575b50505050509050919050565b600060036000838152602001908152602001600020905080600701544210610d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2890613570565b60405180910390fd5b60003411610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b906135dc565b60405180910390fd5b34816005016000828254610d8891906135fc565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610def91906135fc565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610ec257600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610eef5760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610f39929190613630565b60405180910390a35050565b60086020528060005260406000206000915090505481565b60008060008060005b600254811015611039576004600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610fcc91906135fc565b92506005600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261102a91906135fc565b91508080600101915050610f66565b508181935093505050915091565b600760205281600052604060002060205280600052604060002060009150915050805461107390613208565b80601f016020809104026020016040519081016040528092919081815260200182805461109f90613208565b80156110ec5780601f106110c1576101008083540402835291602001916110ec565b820191906000526020600020905b8154815290600101906020018083116110cf57829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b600c602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e4906136a5565b60405180910390fd5b8060080160009054906101000a900460ff161561123f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123690613711565b60405180910390fd5b6000831115611252578281600401819055505b42821115611264578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61135e611fc1565b6113686000612048565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611413576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140a906137a3565b60405180910390fd5b601e8414806114225750603284145b8061142d5750604684145b806114385750606484145b611477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146e9061380f565b60405180910390fd5b806009015484116114bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b4906138a1565b60405180910390fd5b600081600901541115611560576000600a600087815260200190815260200160002080549050905060006114f08261210c565b905080600b600089815260200190815260200160002060008560090154815260200190815260200160002054101561155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155490613959565b60405180910390fd5b50505b8381600901819055508282600660008881526020019081526020016000206000878152602001908152602001600020918261159c929190613984565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c18585856040516115d193929190613a81565b60405180910390a25050505050565b600a60205281600052604060002081815481106115fc57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806003600084815260200190815260200160002090506000600a600085815260200190815260200160002080549050905060006116958261210c565b905060008360090154036116af57600193505050506116e1565b80600b600087815260200190815260200160002060008560090154815260200190815260200160002054101593505050505b919050565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180611796575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6117d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117cc90613aff565b60405180910390fd5b600060036000888152602001908152602001600020905085816009015414611832576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182990613b91565b60405180910390fd5b80600401548160050154101561187d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187490613c23565b60405180910390fd5b8484600760008a8152602001908152602001600020600089815260200190815260200160002091826118b0929190613984565b506000600a600089815260200190815260200160002080549050905060006118d78261210c565b9050841561196057600b60008a815260200190815260200160002060008981526020019081526020016000206000815480929190611914906134dc565b919050555080600b60008b815260200190815260200160002060008a815260200190815260200160002054106119505761194f89898561212e565b5b61195b8984336122e1565b611a07565b600c60008a815260200190815260200160002060008981526020019081526020016000206000815480929190611995906134dc565b91905055506002826119a79190613c72565b600c60008b815260200190815260200160002060008a8152602001908152602001600020541115611a0657601e88146119f057601483600901546119eb9190613ca3565b6119f3565b60005b8360090181905550611a0589896126da565b5b5b887fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a0888888604051611a3b93929190613cd7565b60405180910390a2505050505050505050565b6006602052816000526040600020602052806000526040600020600091509150508054611a7a90613208565b80601f0160208091040260200160405190810160405280929190818152602001828054611aa690613208565b8015611af35780601f10611ac857610100808354040283529160200191611af3565b820191906000526020600020905b815481529060010190602001808311611ad657829003601f168201915b505050505081565b600060036000848152602001908152602001600020905080600701544210611b58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4f90613570565b60405180910390fd5b60008211611b9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b92906135dc565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611bfa93929190613d09565b6020604051808303816000875af1158015611c19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3d9190613d55565b611c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7390613dce565b60405180910390fd5b81816005016000828254611c9091906135fc565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cf791906135fc565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611dca57600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f846000604051611e14929190613630565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611e80929190613dee565b6020604051808303816000875af1158015611e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec39190613d55565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020602052806000526040600020600091509150505481565b611f1d611fc1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f8f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611f869190612f37565b60405180910390fd5b611f9881612048565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fc9612732565b73ffffffffffffffffffffffffffffffffffffffff16611fe761162e565b73ffffffffffffffffffffffffffffffffffffffff16146120465761200a612732565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161203d9190612f37565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600260018361211d91906135fc565b6121279190613c72565b9050919050565b600060648383600401546121429190613e17565b61214c9190613c72565b905060008260060154826121609190613ca3565b905060008111156122da578083600601600082825461217f91906135fc565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121f991906135fc565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505090508061229d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229490613ea5565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e8360006040516122d0929190613630565b60405180910390a2505b5050505050565b6000670de0b6b3a764000090506000600a600086815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561238357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612339575b5050505050905060006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161241d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241490613f11565b60405180910390fd5b60006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561255657600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016124d3929190613dee565b6020604051808303816000875af11580156124f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125169190613d55565b612555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161254c90613f7d565b60405180910390fd5b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016125d7929190613fbe565b6020604051808303816000875af11580156125f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261a9190613d55565b612659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161265090614033565b60405180910390fd5b81600860008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546126cc91906135fc565b925050819055505050505050565b6000600b60008481526020019081526020016000206000838152602001908152602001600020819055506000600c60008481526020019081526020016000206000838152602001908152602001600020819055505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127a182612758565b810181811067ffffffffffffffff821117156127c0576127bf612769565b5b80604052505050565b60006127d361273a565b90506127df8282612798565b919050565b600067ffffffffffffffff8211156127ff576127fe612769565b5b61280882612758565b9050602081019050919050565b82818337600083830152505050565b6000612837612832846127e4565b6127c9565b90508281526020810184848401111561285357612852612753565b5b61285e848285612815565b509392505050565b600082601f83011261287b5761287a61274e565b5b813561288b848260208601612824565b91505092915050565b6000819050919050565b6128a781612894565b81146128b257600080fd5b50565b6000813590506128c48161289e565b92915050565b600080600080600060a086880312156128e6576128e5612744565b5b600086013567ffffffffffffffff81111561290457612903612749565b5b61291088828901612866565b955050602086013567ffffffffffffffff81111561293157612930612749565b5b61293d88828901612866565b945050604086013567ffffffffffffffff81111561295e5761295d612749565b5b61296a88828901612866565b935050606061297b888289016128b5565b925050608061298c888289016128b5565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129c482612999565b9050919050565b6129d4816129b9565b81146129df57600080fd5b50565b6000813590506129f1816129cb565b92915050565b600060208284031215612a0d57612a0c612744565b5b6000612a1b848285016129e2565b91505092915050565b612a2d81612894565b82525050565b6000602082019050612a486000830184612a24565b92915050565b600060208284031215612a6457612a63612744565b5b6000612a72848285016128b5565b91505092915050565b6000612a8682612999565b9050919050565b612a9681612a7b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ad6578082015181840152602081019050612abb565b60008484015250505050565b6000612aed82612a9c565b612af78185612aa7565b9350612b07818560208601612ab8565b612b1081612758565b840191505092915050565b60008115159050919050565b612b3081612b1b565b82525050565b600061014082019050612b4c600083018d612a8d565b8181036020830152612b5e818c612ae2565b90508181036040830152612b72818b612ae2565b90508181036060830152612b86818a612ae2565b9050612b956080830189612a24565b612ba260a0830188612a24565b612baf60c0830187612a24565b612bbc60e0830186612a24565b612bca610100830185612b27565b612bd8610120830184612a24565b9b9a5050505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612c1c816129b9565b82525050565b6000612c2e8383612c13565b60208301905092915050565b6000602082019050919050565b6000612c5282612be7565b612c5c8185612bf2565b9350612c6783612c03565b8060005b83811015612c98578151612c7f8882612c22565b9750612c8a83612c3a565b925050600181019050612c6b565b5085935050505092915050565b60006020820190508181036000830152612cbf8184612c47565b905092915050565b6000604082019050612cdc6000830185612a24565b612ce96020830184612a24565b9392505050565b60008060408385031215612d0757612d06612744565b5b6000612d15858286016128b5565b9250506020612d26858286016128b5565b9150509250929050565b60006020820190508181036000830152612d4a8184612ae2565b905092915050565b60008060408385031215612d6957612d68612744565b5b6000612d77858286016128b5565b9250506020612d88858286016129e2565b9150509250929050565b600080600060608486031215612dab57612daa612744565b5b6000612db9868287016128b5565b9350506020612dca868287016128b5565b9250506040612ddb868287016128b5565b9150509250925092565b612dee816129b9565b82525050565b600060e082019050612e09600083018a612de5565b612e166020830189612a24565b612e236040830188612a24565b612e306060830187612a24565b612e3d6080830186612b27565b612e4a60a0830185612a24565b612e5760c0830184612a24565b98975050505050505050565b600080fd5b600080fd5b60008083601f840112612e8357612e8261274e565b5b8235905067ffffffffffffffff811115612ea057612e9f612e63565b5b602083019150836001820283011115612ebc57612ebb612e68565b5b9250929050565b60008060008060608587031215612edd57612edc612744565b5b6000612eeb878288016128b5565b9450506020612efc878288016128b5565b935050604085013567ffffffffffffffff811115612f1d57612f1c612749565b5b612f2987828801612e6d565b925092505092959194509250565b6000602082019050612f4c6000830184612de5565b92915050565b6000602082019050612f676000830184612b27565b92915050565b612f7681612b1b565b8114612f8157600080fd5b50565b600081359050612f9381612f6d565b92915050565b600080600080600060808688031215612fb557612fb4612744565b5b6000612fc3888289016128b5565b9550506020612fd4888289016128b5565b945050604086013567ffffffffffffffff811115612ff557612ff4612749565b5b61300188828901612e6d565b9350935050606061301488828901612f84565b9150509295509295909350565b6000806040838503121561303857613037612744565b5b6000613046858286016129e2565b9250506020613057858286016128b5565b9150509250929050565b6000819050919050565b600061308661308161307c84612999565b613061565b612999565b9050919050565b60006130988261306b565b9050919050565b60006130aa8261308d565b9050919050565b6130ba8161309f565b82525050565b60006020820190506130d560008301846130b1565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000613137602283612aa7565b9150613142826130db565b604082019050919050565b600060208201905081810360008301526131668161312a565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b60006131a3601e83612aa7565b91506131ae8261316d565b602082019050919050565b600060208201905081810360008301526131d281613196565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061322057607f821691505b602082108103613233576132326131d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261329b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261325e565b6132a5868361325e565b95508019841693508086168417925050509392505050565b60006132d86132d36132ce84612894565b613061565b612894565b9050919050565b6000819050919050565b6132f2836132bd565b6133066132fe826132df565b84845461326b565b825550505050565b600090565b61331b61330e565b6133268184846132e9565b505050565b5b8181101561334a5761333f600082613313565b60018101905061332c565b5050565b601f82111561338f5761336081613239565b6133698461324e565b81016020851015613378578190505b61338c6133848561324e565b83018261332b565b50505b505050565b600082821c905092915050565b60006133b260001984600802613394565b1980831691505092915050565b60006133cb83836133a1565b9150826002028217905092915050565b6133e482612a9c565b67ffffffffffffffff8111156133fd576133fc612769565b5b6134078254613208565b61341282828561334e565b600060209050601f8311600181146134455760008415613433578287015190505b61343d85826133bf565b8655506134a5565b601f19841661345386613239565b60005b8281101561347b57848901518255600182019150602085019450602081019050613456565b868310156134985784890151613494601f8916826133a1565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006134e782612894565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613519576135186134ad565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b600061355a601e83612aa7565b915061356582613524565b602082019050919050565b600060208201905081810360008301526135898161354d565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b60006135c6601d83612aa7565b91506135d182613590565b602082019050919050565b600060208201905081810360008301526135f5816135b9565b9050919050565b600061360782612894565b915061361283612894565b925082820190508082111561362a576136296134ad565b5b92915050565b60006040820190506136456000830185612a24565b6136526020830184612b27565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b600061368f601f83612aa7565b915061369a82613659565b602082019050919050565b600060208201905081810360008301526136be81613682565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b60006136fb601c83612aa7565b9150613706826136c5565b602082019050919050565b6000602082019050818103600083015261372a816136ee565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b600061378d602883612aa7565b915061379882613731565b604082019050919050565b600060208201905081810360008301526137bc81613780565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b60006137f9601683612aa7565b9150613804826137c3565b602082019050919050565b60006020820190508181036000830152613828816137ec565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b600061388b602e83612aa7565b91506138968261382f565b604082019050919050565b600060208201905081810360008301526138ba8161387e565b9050919050565b7f43757272656e742070726f677265737320686173206e6f74206265656e20617060008201527f70726f76656420627920746865206d616a6f72697479206f6620696e7665737460208201527f6f72730000000000000000000000000000000000000000000000000000000000604082015250565b6000613943604383612aa7565b915061394e826138c1565b606082019050919050565b6000602082019050818103600083015261397281613936565b9050919050565b600082905092915050565b61398e8383613979565b67ffffffffffffffff8111156139a7576139a6612769565b5b6139b18254613208565b6139bc82828561334e565b6000601f8311600181146139eb57600084156139d9578287013590505b6139e385826133bf565b865550613a4b565b601f1984166139f986613239565b60005b82811015613a21578489013582556001820191506020850194506020810190506139fc565b86831015613a3e5784890135613a3a601f8916826133a1565b8355505b6001600288020188555050505b50505050505050565b6000613a608385612aa7565b9350613a6d838584612815565b613a7683612758565b840190509392505050565b6000604082019050613a966000830186612a24565b8181036020830152613aa9818486613a54565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b6000613ae9601983612aa7565b9150613af482613ab3565b602082019050919050565b60006020820190508181036000830152613b1881613adc565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b6000613b7b603083612aa7565b9150613b8682613b1f565b604082019050919050565b60006020820190508181036000830152613baa81613b6e565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613c0d602383612aa7565b9150613c1882613bb1565b604082019050919050565b60006020820190508181036000830152613c3c81613c00565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613c7d82612894565b9150613c8883612894565b925082613c9857613c97613c43565b5b828204905092915050565b6000613cae82612894565b9150613cb983612894565b9250828203905081811115613cd157613cd06134ad565b5b92915050565b60006040820190508181036000830152613cf2818587613a54565b9050613d016020830184612b27565b949350505050565b6000606082019050613d1e6000830186612de5565b613d2b6020830185612de5565b613d386040830184612a24565b949350505050565b600081519050613d4f81612f6d565b92915050565b600060208284031215613d6b57613d6a612744565b5b6000613d7984828501613d40565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000613db8601583612aa7565b9150613dc382613d82565b602082019050919050565b60006020820190508181036000830152613de781613dab565b9050919050565b6000604082019050613e036000830185612de5565b613e106020830184612a24565b9392505050565b6000613e2282612894565b9150613e2d83612894565b9250828202613e3b81612894565b91508282048414831517613e5257613e516134ad565b5b5092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000613e8f601383612aa7565b9150613e9a82613e59565b602082019050919050565b60006020820190508181036000830152613ebe81613e82565b9050919050565b7f6e6f20616d6f756e740000000000000000000000000000000000000000000000600082015250565b6000613efb600983612aa7565b9150613f0682613ec5565b602082019050919050565b60006020820190508181036000830152613f2a81613eee565b9050919050565b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b6000613f67601f83612aa7565b9150613f7282613f31565b602082019050919050565b60006020820190508181036000830152613f9681613f5a565b9050919050565b6000613fa88261308d565b9050919050565b613fb881613f9d565b82525050565b6000604082019050613fd36000830185613faf565b613fe06020830184612a24565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b600061401d601e83612aa7565b915061402882613fe7565b602082019050919050565b6000602082019050818103600083015261404c81614010565b905091905056fea2646970667358221220e0d4b5f1abfe0378cfd67ee64af53ed40c57d52e13617938c6edc1ef2ec00aa164736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 285,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 288,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 293,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)282_storage)"
      },
      {
        "astId": 299,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "contributions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "ethContributions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 311,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDetails",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 317,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "approvalComments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 321,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorBalances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorEthBalances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectInvestors",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 336,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressApprovals",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 342,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDisapprovals",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Project)282_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FrogFund.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)282_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)282_storage": {
        "encoding": "inplace",
        "label": "struct FrogFund.Project",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 265,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "link",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "goalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "amountDistributed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "deadline",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 281,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentProgress",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}