{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProgressReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "progress",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "ProgressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "RefundIssued",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approvalComments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "canSubmitNextProgress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorEthBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ethContributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        }
      ],
      "name": "getInvestors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getPlatformBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressApprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDisapprovals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectInvestors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDistributed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "currentProgress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_comment",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "updateProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x13106139edc3271f141418b855edac75ba8c592a1091883b494e53a46d4b9009",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "3693090",
    "logsBloom": "0x
    "blockHash": "0xc1683725d2422d6c5f09e78d2c3f4a463ca774a34aa93809d2d858b6e1233701",
    "transactionHash": "0x13106139edc3271f141418b855edac75ba8c592a1091883b494e53a46d4b9009",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x13106139edc3271f141418b855edac75ba8c592a1091883b494e53a46d4b9009",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc1683725d2422d6c5f09e78d2c3f4a463ca774a34aa93809d2d858b6e1233701"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x13106139edc3271f141418b855edac75ba8c592a1091883b494e53a46d4b9009",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xc1683725d2422d6c5f09e78d2c3f4a463ca774a34aa93809d2d858b6e1233701"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "3693090",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512"
  ],
  "numDeployments": 1,
  "solcInputHash": "a49011890d9f0b5f236472f4b1332b69",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProgressReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalComments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"canSubmitNextProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorEthBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"}],\"name\":\"getInvestors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPlatformBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressApprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDisapprovals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDistributed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentProgress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"reviewProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartFrogFund.sol\":\"FrogFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartFrogFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract FrogFund is Ownable {\\r\\n    struct Project {\\r\\n        address payable creator; // \\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n        string title; // \\u9879\\u76ee\\u6807\\u9898\\r\\n        string description; // \\u9879\\u76ee\\u63cf\\u8ff0\\r\\n        string link; // \\u9879\\u76ee\\u94fe\\u63a5\\r\\n        uint256 goalAmount; // \\u76ee\\u6807\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 currentAmount; // \\u5f53\\u524d\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 amountDistributed; // \\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n        uint256 deadline; // \\u622a\\u6b62\\u65e5\\u671f\\r\\n        bool completed; // \\u9879\\u76ee\\u72b6\\u6001\\r\\n        uint256 currentProgress; // 0, 30, 50, 70, 100 \\u9879\\u76ee\\u8fdb\\u5ea6\\r\\n    }\\r\\n\\r\\n    IERC20 public token;\\r\\n    uint256 public projectCount = 0;\\r\\n    mapping(uint256 => Project) public projects;\\r\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\r\\n    mapping(uint256 => mapping(address => uint256)) public ethContributions;\\r\\n    mapping(uint256 => mapping(uint256 => string)) public progressDetails; // projectId => progress => details\\r\\n    mapping(uint256 => mapping(uint256 => string)) public approvalComments; // projectId => progress => comment\\r\\n    mapping(address => uint256) public creatorBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ERC20\\u4f59\\u989d\\r\\n    mapping(address => uint256) public creatorEthBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ETH\\u4f59\\u989d\\r\\n    mapping(uint256 => address[]) public projectInvestors; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u7684\\u6295\\u8d44\\u8005\\r\\n\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) public progressApprovals; // projectId => progress => approval count\\r\\n    mapping(uint256 => mapping(uint256 => uint256)) public progressDisapprovals; // projectId => progress => disapproval count\\r\\n\\r\\n    modifier onlyInvestor(uint256 _projectId) {\\r\\n        require(\\r\\n            ethContributions[_projectId][msg.sender] > 0 ||\\r\\n                contributions[_projectId][msg.sender] > 0,\\r\\n            \\\"Caller is not an investor\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    event ProjectCreated(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed creator,\\r\\n        string _description,\\r\\n        string _link,\\r\\n        uint256 goalAmount,\\r\\n        uint256 deadline\\r\\n    );\\r\\n    event ProjectFunded(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressUpdated(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 progress,\\r\\n        string details\\r\\n    );\\r\\n    event FundsDistributed(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event RefundIssued(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressReviewed(\\r\\n        uint256 indexed projectId,\\r\\n        string comment,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\r\\n        token = IERC20(_tokenAddress);\\r\\n        transferOwnership(msg.sender);\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        string memory _title,\\r\\n        string memory _description,\\r\\n        string memory _link,\\r\\n        uint256 _goalAmount,\\r\\n        uint256 _deadline\\r\\n    ) external {\\r\\n        require(_goalAmount > 0, \\\"Goal amount must be greater than 0\\\");\\r\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\r\\n\\r\\n        projects[projectCount] = Project({\\r\\n            creator: payable(msg.sender),\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            link: _link,\\r\\n            goalAmount: _goalAmount,\\r\\n            currentAmount: 0,\\r\\n            deadline: _deadline,\\r\\n            completed: false,\\r\\n            currentProgress: 0,\\r\\n            amountDistributed: 0\\r\\n        });\\r\\n\\r\\n        emit ProjectCreated(\\r\\n            projectCount,\\r\\n            msg.sender,\\r\\n            _description,\\r\\n            _link,\\r\\n            _goalAmount,\\r\\n            _deadline\\r\\n        );\\r\\n        projectCount++;\\r\\n    }\\r\\n\\r\\n    function supportProjectWithToken(\\r\\n        uint256 _projectId,\\r\\n        uint256 _amount\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"Token transfer failed\\\"\\r\\n        );\\r\\n\\r\\n        project.currentAmount += _amount;\\r\\n        contributions[_projectId][msg.sender] += _amount;\\r\\n\\r\\n        if (contributions[_projectId][msg.sender] == _amount) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, _amount, false);\\r\\n    }\\r\\n\\r\\n    function supportProjectWithEth(uint256 _projectId) external payable {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        project.currentAmount += msg.value;\\r\\n        ethContributions[_projectId][msg.sender] += msg.value;\\r\\n\\r\\n        if (ethContributions[_projectId][msg.sender] == msg.value) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n        if (project.currentAmount >= project.goalAmount) {\\r\\n            // \\u8fbe\\u5230\\u76ee\\u6807\\u91d1\\u989d\\r\\n            project.completed = true;\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, msg.value, true);\\r\\n    }\\r\\n\\r\\n    function updateProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _details\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress == 30 ||\\r\\n                _progress == 50 ||\\r\\n                _progress == 70 ||\\r\\n                _progress == 100,\\r\\n            \\\"Invalid progress value\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress > project.currentProgress,\\r\\n            \\\"Progress must be greater than current progress\\\"\\r\\n        );\\r\\n        if (project.currentProgress > 0) {\\r\\n            uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n            uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n            require(\\r\\n                progressApprovals[_projectId][project.currentProgress] >=\\r\\n                    requiredApprovals,\\r\\n                \\\"Current progress has not been approved by the majority of investors\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        project.currentProgress = _progress;\\r\\n        progressDetails[_projectId][_progress] = _details;\\r\\n\\r\\n        emit ProgressUpdated(_projectId, _progress, _details);\\r\\n    }\\r\\n\\r\\n    function reviewProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _comment,\\r\\n        bool _approved\\r\\n    ) external onlyInvestor(_projectId) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            project.currentProgress == _progress,\\r\\n            \\\"Progress does not match current project progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            project.currentAmount >= project.goalAmount,\\r\\n            \\\"Project has not reached goal amount\\\"\\r\\n        );\\r\\n\\r\\n        approvalComments[_projectId][_progress] = _comment;\\r\\n\\r\\n        uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n        uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n\\r\\n        if (_approved) {\\r\\n            progressApprovals[_projectId][_progress]++;\\r\\n            if (progressApprovals[_projectId][_progress] >= requiredApprovals) {\\r\\n                distributeFunds(_projectId, _progress, project);\\r\\n            }\\r\\n            distributeRewards(_projectId, project, msg.sender);\\r\\n        } else {\\r\\n            progressDisapprovals[_projectId][_progress]++;\\r\\n            if (\\r\\n                progressDisapprovals[_projectId][_progress] > totalInvestors / 2\\r\\n            ) {\\r\\n                // \\u56de\\u9000\\u8fdb\\u5ea6\\r\\n                project.currentProgress = _progress == 30\\r\\n                    ? 0\\r\\n                    : project.currentProgress - 20;\\r\\n                // \\u6e05\\u7a7a\\u4e4b\\u524d\\u9636\\u6bb5\\u7684\\u5ba1\\u6279\\u8bb0\\u5f55\\r\\n                clearProgressRecords(_projectId, _progress);\\r\\n            }\\r\\n        }\\r\\n        emit ProgressReviewed(_projectId, _comment, _approved);\\r\\n    }\\r\\n    function clearProgressRecords(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress\\r\\n    ) internal {\\r\\n        progressApprovals[_projectId][_progress] = 0;\\r\\n        progressDisapprovals[_projectId][_progress] = 0;\\r\\n    }\\r\\n    function getRequiredApprovals(\\r\\n        uint256 totalInvestors\\r\\n    ) internal pure returns (uint256) {\\r\\n        return (totalInvestors + 1) / 2; // \\u786e\\u4fdd\\u81f3\\u5c11\\u8fbe\\u5230\\u603b\\u6295\\u8d44\\u4eba\\u6570\\u7684\\u4e00\\u534a\\r\\n    }\\r\\n    function distributeFunds(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 totalAmountToDistribute = (project.goalAmount * _progress) /\\r\\n            100;\\r\\n        uint256 amountToDistribute = totalAmountToDistribute -\\r\\n            project.amountDistributed;\\r\\n\\r\\n        if (amountToDistribute > 0) {\\r\\n            project.amountDistributed += amountToDistribute; // \\u66f4\\u65b0\\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n            creatorEthBalances[project.creator] += amountToDistribute; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaETH\\u4f59\\u989d\\r\\n            // \\u5b9e\\u9645\\u8f6c\\u79fbETH\\u5230\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            bool success = project.creator.send(amountToDistribute);\\r\\n            require(success, \\\"ETH transfer failed\\\");\\r\\n\\r\\n            emit FundsDistributed(_projectId, amountToDistribute, false);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function distributeRewards(\\r\\n        uint256 _projectId,\\r\\n        Project storage project,\\r\\n        address caller\\r\\n    ) internal {\\r\\n        uint256 reward = 1 * 10 ** 18; // \\u8bbe\\u7f6e\\u5956\\u52b1\\u6570\\u989d\\r\\n        // token.approve(address(this), reward);\\r\\n        address[] memory investors = projectInvestors[_projectId];\\r\\n        // for (uint256 i = 0; i < investors.length; i++) {\\r\\n        // address investor = investors[i];\\r\\n        require(ethContributions[_projectId][msg.sender] > 0, \\\"no amount\\\");\\r\\n        if (ethContributions[_projectId][msg.sender] > 0) {\\r\\n            require(\\r\\n                token.transfer(msg.sender, reward),\\r\\n                \\\"Investor reward transfer failed\\\"\\r\\n            );\\r\\n        }\\r\\n        // }\\r\\n        require(\\r\\n            token.transfer(project.creator, reward),\\r\\n            \\\"Creator reward transfer failed\\\"\\r\\n        );\\r\\n        creatorBalances[project.creator] += reward; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaERC20\\u4f59\\u989d\\r\\n    }\\r\\n\\r\\n    function updateProject(\\r\\n        uint256 _projectId,\\r\\n        uint256 _newGoalAmount,\\r\\n        uint256 _newDeadline\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update\\\"\\r\\n        );\\r\\n        require(!project.completed, \\\"Project is already completed\\\");\\r\\n\\r\\n        if (_newGoalAmount > 0) {\\r\\n            project.goalAmount = _newGoalAmount;\\r\\n        }\\r\\n        if (_newDeadline > block.timestamp) {\\r\\n            project.deadline = _newDeadline;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectDetails(\\r\\n        uint256 _projectId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (address, uint256, uint256, uint256, bool, uint256, uint256)\\r\\n    {\\r\\n        Project storage project = projects[_projectId];\\r\\n        return (\\r\\n            project.creator,\\r\\n            project.goalAmount,\\r\\n            project.currentAmount,\\r\\n            project.deadline,\\r\\n            project.completed,\\r\\n            project.currentProgress,\\r\\n            project.amountDistributed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getPlatformBalance(\\r\\n        address _user\\r\\n    ) external view returns (uint256, uint256) {\\r\\n        uint256 totalTokenBalance = 0;\\r\\n        uint256 totalEthBalance = 0;\\r\\n        for (uint256 i = 0; i < projectCount; i++) {\\r\\n            totalTokenBalance += contributions[i][_user];\\r\\n            totalEthBalance += ethContributions[i][_user];\\r\\n        }\\r\\n        return (totalTokenBalance, totalEthBalance);\\r\\n    }\\r\\n\\r\\n    function getCreatorBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorBalances[_creator];\\r\\n    }\\r\\n\\r\\n    function getCreatorEthBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorEthBalances[_creator];\\r\\n    }\\r\\n    function transferTokens(address to, uint256 value) external returns (bool) {\\r\\n        return token.transfer(to, value);\\r\\n    }\\r\\n    function canSubmitNextProgress(\\r\\n        uint256 _projectId\\r\\n    ) external view returns (bool) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        uint256 totalInvestors = projectInvestors[_projectId].length;\\r\\n        uint256 requiredApprovals = getRequiredApprovals(totalInvestors);\\r\\n\\r\\n        if (project.currentProgress == 0) {\\r\\n            return true;\\r\\n        }\\r\\n\\r\\n        return\\r\\n            progressApprovals[_projectId][project.currentProgress] >=\\r\\n            requiredApprovals;\\r\\n    }\\r\\n    function getInvestors(\\r\\n        uint256 projectId\\r\\n    ) public view returns (address[] memory) {\\r\\n        return projectInvestors[projectId];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb0c972da6667cf12f9ab7dd7db0676ba0813c6e5def2d95426c12814807b6af6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b50604051620045073803806200450783398181016040528101906200003c9190620003b7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620003fa565b60405180910390fd5b620000c3816200011d60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011633620001e160201b60201c565b5062000417565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f16200027a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002665760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200025d9190620003fa565b60405180910390fd5b62000277816200011d60201b60201c565b50565b6200028a6200031c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002b06200032460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200031a57620002dc6200031c60201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620003119190620003fa565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200037f8262000352565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf6200034d565b5b6000620003e084828501620003a0565b91505092915050565b620003f48162000372565b82525050565b6000602082019050620004116000830184620003e9565b92915050565b6140e080620004276000396000f3fe6080604052600436106101b75760003560e01c80636a78c833116100ec578063b9b1060b1161008a578063d5f2cf0511610064578063d5f2cf05146106b5578063dd5862e5146106f2578063f2fde38b1461072f578063fc0c546a14610758576101b7565b8063b9b1060b14610612578063bbbf146a1461064f578063bec3fa1714610678576101b7565b80638b44da95116100c65780638b44da95146105445780638da5cb5b14610581578063aff5eaee146105ac578063b93a5339146105e9576101b7565b80636a78c833146104c7578063715018a6146105045780637a25f1001461051b576101b7565b8063350d171711610159578063523db93911610133578063523db939146103e15780635955eb151461041e5780635b325968146104475780635f8439e314610484576101b7565b8063350d17171461033c57806336fbad26146103795780633d891f59146103a4576101b7565b80631139de55116101955780631139de55146102685780631b5d5f81146102a55780632a782802146102c15780633170ee1d146102fe576101b7565b8063056c29ee146101bc57806309cf7ffc146101e5578063107046bd14610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de91906128ce565b610783565b005b3480156101f157600080fd5b5061020c600480360381019061020791906129fb565b6109d5565b6040516102199190612a37565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612a52565b610a1e565b60405161025f9a99989796959493929190612b3a565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a9190612a52565b610c37565b60405161029c9190612ca9565b60405180910390f35b6102bf60048036038101906102ba9190612a52565b610cd8565b005b3480156102cd57600080fd5b506102e860048036038101906102e391906129fb565b610f49565b6040516102f59190612a37565b60405180910390f35b34801561030a57600080fd5b50610325600480360381019061032091906129fb565b610f61565b604051610333929190612ccb565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612cf4565b61104b565b6040516103709190612d34565b60405180910390f35b34801561038557600080fd5b5061038e6110f8565b60405161039b9190612a37565b60405180910390f35b3480156103b057600080fd5b506103cb60048036038101906103c69190612d56565b6110fe565b6040516103d89190612a37565b60405180910390f35b3480156103ed57600080fd5b5061040860048036038101906104039190612cf4565b611123565b6040516104159190612a37565b60405180910390f35b34801561042a57600080fd5b5061044560048036038101906104409190612d96565b611148565b005b34801561045357600080fd5b5061046e600480360381019061046991906129fb565b61126e565b60405161047b9190612a37565b60405180910390f35b34801561049057600080fd5b506104ab60048036038101906104a69190612a52565b611286565b6040516104be9796959493929190612df8565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e991906129fb565b611311565b6040516104fb9190612a37565b60405180910390f35b34801561051057600080fd5b5061051961135a565b005b34801561052757600080fd5b50610542600480360381019061053d9190612ec7565b61136e565b005b34801561055057600080fd5b5061056b60048036038101906105669190612cf4565b6115e4565b6040516105789190612f3b565b60405180910390f35b34801561058d57600080fd5b50610596611632565b6040516105a39190612f3b565b60405180910390f35b3480156105b857600080fd5b506105d360048036038101906105ce9190612a52565b61165b565b6040516105e09190612f56565b60405180910390f35b3480156105f557600080fd5b50610610600480360381019061060b9190612f9d565b6116ea565b005b34801561061e57600080fd5b5061063960048036038101906106349190612cf4565b611a52565b6040516106469190612d34565b60405180910390f35b34801561065b57600080fd5b5061067660048036038101906106719190612cf4565b611aff565b005b34801561068457600080fd5b5061069f600480360381019061069a9190613025565b611e25565b6040516106ac9190612f56565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190612d56565b611ecf565b6040516106e99190612a37565b60405180910390f35b3480156106fe57600080fd5b5061071960048036038101906107149190612cf4565b611ef4565b6040516107269190612a37565b60405180910390f35b34801561073b57600080fd5b50610756600480360381019061075191906129fb565b611f19565b005b34801561076457600080fd5b5061076d611f9f565b60405161077a91906130c4565b60405180910390f35b600082116107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90613151565b60405180910390fd5b428111610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906131bd565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816108db91906133df565b5060408201518160020190816108f191906133df565b50606082015181600301908161090791906133df565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fac9b83534845c9e785a6ea70f2d809db1d72ef9a1d981753712d922f5cb55f39868686866040516109ae94939291906134b1565b60405180910390a3600260008154809291906109c990613533565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610a679061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a939061320c565b8015610ae05780601f10610ab557610100808354040283529160200191610ae0565b820191906000526020600020905b815481529060010190602001808311610ac357829003601f168201915b505050505090806002018054610af59061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b219061320c565b8015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b505050505090806003018054610b839061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610baf9061320c565b8015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b6060600a6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ccc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c82575b50505050509050919050565b600060036000838152602001908152602001600020905080600701544210610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c906135c7565b60405180910390fd5b60003411610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90613633565b60405180910390fd5b34816005016000828254610d8c9190613653565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df39190613653565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610ec657600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610ef35760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610f3d929190613687565b60405180910390a35050565b60086020528060005260406000206000915090505481565b60008060008060005b60025481101561103d576004600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610fd09190613653565b92506005600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261102e9190613653565b91508080600101915050610f6a565b508181935093505050915091565b60076020528160005260406000206020528060005260406000206000915091505080546110779061320c565b80601f01602080910402602001604051908101604052809291908181526020018280546110a39061320c565b80156110f05780601f106110c5576101008083540402835291602001916110f0565b820191906000526020600020905b8154815290600101906020018083116110d357829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b600c602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e8906136fc565b60405180910390fd5b8060080160009054906101000a900460ff1615611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90613768565b60405180910390fd5b6000831115611256578281600401819055505b42821115611268578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611362611fc5565b61136c600061204c565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140e906137fa565b60405180910390fd5b601e8414806114265750603284145b806114315750604684145b8061143c5750606484145b61147b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147290613866565b60405180910390fd5b806009015484116114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b8906138f8565b60405180910390fd5b600081600901541115611564576000600a600087815260200190815260200160002080549050905060006114f482612110565b905080600b6000898152602001908152602001600020600085600901548152602001908152602001600020541015611561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611558906139b0565b60405180910390fd5b50505b838160090181905550828260066000888152602001908152602001600020600087815260200190815260200160002091826115a09291906139db565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c18585856040516115d593929190613ad8565b60405180910390a25050505050565b600a602052816000526040600020818154811061160057600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806003600084815260200190815260200160002090506000600a6000858152602001908152602001600020805490509050600061169982612110565b905060008360090154036116b357600193505050506116e5565b80600b600087815260200190815260200160002060008560090154815260200190815260200160002054101593505050505b919050565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118061179a575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6117d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d090613b56565b60405180910390fd5b600060036000888152602001908152602001600020905085816009015414611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d90613be8565b60405180910390fd5b806004015481600501541015611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187890613c7a565b60405180910390fd5b8484600760008a8152602001908152602001600020600089815260200190815260200160002091826118b49291906139db565b506000600a600089815260200190815260200160002080549050905060006118db82612110565b9050841561196457600b60008a81526020019081526020016000206000898152602001908152602001600020600081548092919061191890613533565b919050555080600b60008b815260200190815260200160002060008a8152602001908152602001600020541061195457611953898985612132565b5b61195f8984336122e5565b611a0b565b600c60008a81526020019081526020016000206000898152602001908152602001600020600081548092919061199990613533565b91905055506002826119ab9190613cc9565b600c60008b815260200190815260200160002060008a8152602001908152602001600020541115611a0a57601e88146119f457601483600901546119ef9190613cfa565b6119f7565b60005b8360090181905550611a0989896126de565b5b5b887fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a0888888604051611a3f93929190613d2e565b60405180910390a2505050505050505050565b6006602052816000526040600020602052806000526040600020600091509150508054611a7e9061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054611aaa9061320c565b8015611af75780601f10611acc57610100808354040283529160200191611af7565b820191906000526020600020905b815481529060010190602001808311611ada57829003601f168201915b505050505081565b600060036000848152602001908152602001600020905080600701544210611b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b53906135c7565b60405180910390fd5b60008211611b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9690613633565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611bfe93929190613d60565b6020604051808303816000875af1158015611c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c419190613dac565b611c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7790613e25565b60405180910390fd5b81816005016000828254611c949190613653565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cfb9190613653565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611dce57600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f846000604051611e18929190613687565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611e84929190613e45565b6020604051808303816000875af1158015611ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec79190613dac565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020602052806000526040600020600091509150505481565b611f21611fc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f935760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611f8a9190612f3b565b60405180910390fd5b611f9c8161204c565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fcd612736565b73ffffffffffffffffffffffffffffffffffffffff16611feb611632565b73ffffffffffffffffffffffffffffffffffffffff161461204a5761200e612736565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120419190612f3b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060026001836121219190613653565b61212b9190613cc9565b9050919050565b600060648383600401546121469190613e6e565b6121509190613cc9565b905060008260060154826121649190613cfa565b905060008111156122de57808360060160008282546121839190613653565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121fd9190613653565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050509050806122a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229890613efc565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e8360006040516122d4929190613687565b60405180910390a2505b5050505050565b6000670de0b6b3a764000090506000600a600086815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561238757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161233d575b5050505050905060006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241890613f68565b60405180910390fd5b60006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561255a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016124d7929190613e45565b6020604051808303816000875af11580156124f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251a9190613dac565b612559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255090613fd4565b60405180910390fd5b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016125db929190614015565b6020604051808303816000875af11580156125fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261e9190613dac565b61265d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126549061408a565b60405180910390fd5b81600860008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546126d09190613653565b925050819055505050505050565b6000600b60008481526020019081526020016000206000838152602001908152602001600020819055506000600c60008481526020019081526020016000206000838152602001908152602001600020819055505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127a58261275c565b810181811067ffffffffffffffff821117156127c4576127c361276d565b5b80604052505050565b60006127d761273e565b90506127e3828261279c565b919050565b600067ffffffffffffffff8211156128035761280261276d565b5b61280c8261275c565b9050602081019050919050565b82818337600083830152505050565b600061283b612836846127e8565b6127cd565b90508281526020810184848401111561285757612856612757565b5b612862848285612819565b509392505050565b600082601f83011261287f5761287e612752565b5b813561288f848260208601612828565b91505092915050565b6000819050919050565b6128ab81612898565b81146128b657600080fd5b50565b6000813590506128c8816128a2565b92915050565b600080600080600060a086880312156128ea576128e9612748565b5b600086013567ffffffffffffffff8111156129085761290761274d565b5b6129148882890161286a565b955050602086013567ffffffffffffffff8111156129355761293461274d565b5b6129418882890161286a565b945050604086013567ffffffffffffffff8111156129625761296161274d565b5b61296e8882890161286a565b935050606061297f888289016128b9565b9250506080612990888289016128b9565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129c88261299d565b9050919050565b6129d8816129bd565b81146129e357600080fd5b50565b6000813590506129f5816129cf565b92915050565b600060208284031215612a1157612a10612748565b5b6000612a1f848285016129e6565b91505092915050565b612a3181612898565b82525050565b6000602082019050612a4c6000830184612a28565b92915050565b600060208284031215612a6857612a67612748565b5b6000612a76848285016128b9565b91505092915050565b6000612a8a8261299d565b9050919050565b612a9a81612a7f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ada578082015181840152602081019050612abf565b60008484015250505050565b6000612af182612aa0565b612afb8185612aab565b9350612b0b818560208601612abc565b612b148161275c565b840191505092915050565b60008115159050919050565b612b3481612b1f565b82525050565b600061014082019050612b50600083018d612a91565b8181036020830152612b62818c612ae6565b90508181036040830152612b76818b612ae6565b90508181036060830152612b8a818a612ae6565b9050612b996080830189612a28565b612ba660a0830188612a28565b612bb360c0830187612a28565b612bc060e0830186612a28565b612bce610100830185612b2b565b612bdc610120830184612a28565b9b9a5050505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612c20816129bd565b82525050565b6000612c328383612c17565b60208301905092915050565b6000602082019050919050565b6000612c5682612beb565b612c608185612bf6565b9350612c6b83612c07565b8060005b83811015612c9c578151612c838882612c26565b9750612c8e83612c3e565b925050600181019050612c6f565b5085935050505092915050565b60006020820190508181036000830152612cc38184612c4b565b905092915050565b6000604082019050612ce06000830185612a28565b612ced6020830184612a28565b9392505050565b60008060408385031215612d0b57612d0a612748565b5b6000612d19858286016128b9565b9250506020612d2a858286016128b9565b9150509250929050565b60006020820190508181036000830152612d4e8184612ae6565b905092915050565b60008060408385031215612d6d57612d6c612748565b5b6000612d7b858286016128b9565b9250506020612d8c858286016129e6565b9150509250929050565b600080600060608486031215612daf57612dae612748565b5b6000612dbd868287016128b9565b9350506020612dce868287016128b9565b9250506040612ddf868287016128b9565b9150509250925092565b612df2816129bd565b82525050565b600060e082019050612e0d600083018a612de9565b612e1a6020830189612a28565b612e276040830188612a28565b612e346060830187612a28565b612e416080830186612b2b565b612e4e60a0830185612a28565b612e5b60c0830184612a28565b98975050505050505050565b600080fd5b600080fd5b60008083601f840112612e8757612e86612752565b5b8235905067ffffffffffffffff811115612ea457612ea3612e67565b5b602083019150836001820283011115612ec057612ebf612e6c565b5b9250929050565b60008060008060608587031215612ee157612ee0612748565b5b6000612eef878288016128b9565b9450506020612f00878288016128b9565b935050604085013567ffffffffffffffff811115612f2157612f2061274d565b5b612f2d87828801612e71565b925092505092959194509250565b6000602082019050612f506000830184612de9565b92915050565b6000602082019050612f6b6000830184612b2b565b92915050565b612f7a81612b1f565b8114612f8557600080fd5b50565b600081359050612f9781612f71565b92915050565b600080600080600060808688031215612fb957612fb8612748565b5b6000612fc7888289016128b9565b9550506020612fd8888289016128b9565b945050604086013567ffffffffffffffff811115612ff957612ff861274d565b5b61300588828901612e71565b9350935050606061301888828901612f88565b9150509295509295909350565b6000806040838503121561303c5761303b612748565b5b600061304a858286016129e6565b925050602061305b858286016128b9565b9150509250929050565b6000819050919050565b600061308a6130856130808461299d565b613065565b61299d565b9050919050565b600061309c8261306f565b9050919050565b60006130ae82613091565b9050919050565b6130be816130a3565b82525050565b60006020820190506130d960008301846130b5565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b600061313b602283612aab565b9150613146826130df565b604082019050919050565b6000602082019050818103600083015261316a8161312e565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b60006131a7601e83612aab565b91506131b282613171565b602082019050919050565b600060208201905081810360008301526131d68161319a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061322457607f821691505b602082108103613237576132366131dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261329f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613262565b6132a98683613262565b95508019841693508086168417925050509392505050565b60006132dc6132d76132d284612898565b613065565b612898565b9050919050565b6000819050919050565b6132f6836132c1565b61330a613302826132e3565b84845461326f565b825550505050565b600090565b61331f613312565b61332a8184846132ed565b505050565b5b8181101561334e57613343600082613317565b600181019050613330565b5050565b601f821115613393576133648161323d565b61336d84613252565b8101602085101561337c578190505b61339061338885613252565b83018261332f565b50505b505050565b600082821c905092915050565b60006133b660001984600802613398565b1980831691505092915050565b60006133cf83836133a5565b9150826002028217905092915050565b6133e882612aa0565b67ffffffffffffffff8111156134015761340061276d565b5b61340b825461320c565b613416828285613352565b600060209050601f8311600181146134495760008415613437578287015190505b61344185826133c3565b8655506134a9565b601f1984166134578661323d565b60005b8281101561347f5784890151825560018201915060208501945060208101905061345a565b8683101561349c5784890151613498601f8916826133a5565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526134cb8187612ae6565b905081810360208301526134df8186612ae6565b90506134ee6040830185612a28565b6134fb6060830184612a28565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061353e82612898565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135705761356f613504565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b60006135b1601e83612aab565b91506135bc8261357b565b602082019050919050565b600060208201905081810360008301526135e0816135a4565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b600061361d601d83612aab565b9150613628826135e7565b602082019050919050565b6000602082019050818103600083015261364c81613610565b9050919050565b600061365e82612898565b915061366983612898565b925082820190508082111561368157613680613504565b5b92915050565b600060408201905061369c6000830185612a28565b6136a96020830184612b2b565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b60006136e6601f83612aab565b91506136f1826136b0565b602082019050919050565b60006020820190508181036000830152613715816136d9565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b6000613752601c83612aab565b915061375d8261371c565b602082019050919050565b6000602082019050818103600083015261378181613745565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b60006137e4602883612aab565b91506137ef82613788565b604082019050919050565b60006020820190508181036000830152613813816137d7565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b6000613850601683612aab565b915061385b8261381a565b602082019050919050565b6000602082019050818103600083015261387f81613843565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b60006138e2602e83612aab565b91506138ed82613886565b604082019050919050565b60006020820190508181036000830152613911816138d5565b9050919050565b7f43757272656e742070726f677265737320686173206e6f74206265656e20617060008201527f70726f76656420627920746865206d616a6f72697479206f6620696e7665737460208201527f6f72730000000000000000000000000000000000000000000000000000000000604082015250565b600061399a604383612aab565b91506139a582613918565b606082019050919050565b600060208201905081810360008301526139c98161398d565b9050919050565b600082905092915050565b6139e583836139d0565b67ffffffffffffffff8111156139fe576139fd61276d565b5b613a08825461320c565b613a13828285613352565b6000601f831160018114613a425760008415613a30578287013590505b613a3a85826133c3565b865550613aa2565b601f198416613a508661323d565b60005b82811015613a7857848901358255600182019150602085019450602081019050613a53565b86831015613a955784890135613a91601f8916826133a5565b8355505b6001600288020188555050505b50505050505050565b6000613ab78385612aab565b9350613ac4838584612819565b613acd8361275c565b840190509392505050565b6000604082019050613aed6000830186612a28565b8181036020830152613b00818486613aab565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b6000613b40601983612aab565b9150613b4b82613b0a565b602082019050919050565b60006020820190508181036000830152613b6f81613b33565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b6000613bd2603083612aab565b9150613bdd82613b76565b604082019050919050565b60006020820190508181036000830152613c0181613bc5565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613c64602383612aab565b9150613c6f82613c08565b604082019050919050565b60006020820190508181036000830152613c9381613c57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613cd482612898565b9150613cdf83612898565b925082613cef57613cee613c9a565b5b828204905092915050565b6000613d0582612898565b9150613d1083612898565b9250828203905081811115613d2857613d27613504565b5b92915050565b60006040820190508181036000830152613d49818587613aab565b9050613d586020830184612b2b565b949350505050565b6000606082019050613d756000830186612de9565b613d826020830185612de9565b613d8f6040830184612a28565b949350505050565b600081519050613da681612f71565b92915050565b600060208284031215613dc257613dc1612748565b5b6000613dd084828501613d97565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000613e0f601583612aab565b9150613e1a82613dd9565b602082019050919050565b60006020820190508181036000830152613e3e81613e02565b9050919050565b6000604082019050613e5a6000830185612de9565b613e676020830184612a28565b9392505050565b6000613e7982612898565b9150613e8483612898565b9250828202613e9281612898565b91508282048414831517613ea957613ea8613504565b5b5092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000613ee6601383612aab565b9150613ef182613eb0565b602082019050919050565b60006020820190508181036000830152613f1581613ed9565b9050919050565b7f6e6f20616d6f756e740000000000000000000000000000000000000000000000600082015250565b6000613f52600983612aab565b9150613f5d82613f1c565b602082019050919050565b60006020820190508181036000830152613f8181613f45565b9050919050565b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b6000613fbe601f83612aab565b9150613fc982613f88565b602082019050919050565b60006020820190508181036000830152613fed81613fb1565b9050919050565b6000613fff82613091565b9050919050565b61400f81613ff4565b82525050565b600060408201905061402a6000830185614006565b6140376020830184612a28565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b6000614074601e83612aab565b915061407f8261403e565b602082019050919050565b600060208201905081810360008301526140a381614067565b905091905056fea2646970667358221220773de6c83c7a66e36459aa6f459283f62eda3c4e67ff3698ba41f07c1450c84364736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106101b75760003560e01c80636a78c833116100ec578063b9b1060b1161008a578063d5f2cf0511610064578063d5f2cf05146106b5578063dd5862e5146106f2578063f2fde38b1461072f578063fc0c546a14610758576101b7565b8063b9b1060b14610612578063bbbf146a1461064f578063bec3fa1714610678576101b7565b80638b44da95116100c65780638b44da95146105445780638da5cb5b14610581578063aff5eaee146105ac578063b93a5339146105e9576101b7565b80636a78c833146104c7578063715018a6146105045780637a25f1001461051b576101b7565b8063350d171711610159578063523db93911610133578063523db939146103e15780635955eb151461041e5780635b325968146104475780635f8439e314610484576101b7565b8063350d17171461033c57806336fbad26146103795780633d891f59146103a4576101b7565b80631139de55116101955780631139de55146102685780631b5d5f81146102a55780632a782802146102c15780633170ee1d146102fe576101b7565b8063056c29ee146101bc57806309cf7ffc146101e5578063107046bd14610222575b600080fd5b3480156101c857600080fd5b506101e360048036038101906101de91906128ce565b610783565b005b3480156101f157600080fd5b5061020c600480360381019061020791906129fb565b6109d5565b6040516102199190612a37565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612a52565b610a1e565b60405161025f9a99989796959493929190612b3a565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a9190612a52565b610c37565b60405161029c9190612ca9565b60405180910390f35b6102bf60048036038101906102ba9190612a52565b610cd8565b005b3480156102cd57600080fd5b506102e860048036038101906102e391906129fb565b610f49565b6040516102f59190612a37565b60405180910390f35b34801561030a57600080fd5b50610325600480360381019061032091906129fb565b610f61565b604051610333929190612ccb565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190612cf4565b61104b565b6040516103709190612d34565b60405180910390f35b34801561038557600080fd5b5061038e6110f8565b60405161039b9190612a37565b60405180910390f35b3480156103b057600080fd5b506103cb60048036038101906103c69190612d56565b6110fe565b6040516103d89190612a37565b60405180910390f35b3480156103ed57600080fd5b5061040860048036038101906104039190612cf4565b611123565b6040516104159190612a37565b60405180910390f35b34801561042a57600080fd5b5061044560048036038101906104409190612d96565b611148565b005b34801561045357600080fd5b5061046e600480360381019061046991906129fb565b61126e565b60405161047b9190612a37565b60405180910390f35b34801561049057600080fd5b506104ab60048036038101906104a69190612a52565b611286565b6040516104be9796959493929190612df8565b60405180910390f35b3480156104d357600080fd5b506104ee60048036038101906104e991906129fb565b611311565b6040516104fb9190612a37565b60405180910390f35b34801561051057600080fd5b5061051961135a565b005b34801561052757600080fd5b50610542600480360381019061053d9190612ec7565b61136e565b005b34801561055057600080fd5b5061056b60048036038101906105669190612cf4565b6115e4565b6040516105789190612f3b565b60405180910390f35b34801561058d57600080fd5b50610596611632565b6040516105a39190612f3b565b60405180910390f35b3480156105b857600080fd5b506105d360048036038101906105ce9190612a52565b61165b565b6040516105e09190612f56565b60405180910390f35b3480156105f557600080fd5b50610610600480360381019061060b9190612f9d565b6116ea565b005b34801561061e57600080fd5b5061063960048036038101906106349190612cf4565b611a52565b6040516106469190612d34565b60405180910390f35b34801561065b57600080fd5b5061067660048036038101906106719190612cf4565b611aff565b005b34801561068457600080fd5b5061069f600480360381019061069a9190613025565b611e25565b6040516106ac9190612f56565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190612d56565b611ecf565b6040516106e99190612a37565b60405180910390f35b3480156106fe57600080fd5b5061071960048036038101906107149190612cf4565b611ef4565b6040516107269190612a37565b60405180910390f35b34801561073b57600080fd5b50610756600480360381019061075191906129fb565b611f19565b005b34801561076457600080fd5b5061076d611f9f565b60405161077a91906130c4565b60405180910390f35b600082116107c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bd90613151565b60405180910390fd5b428111610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ff906131bd565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816108db91906133df565b5060408201518160020190816108f191906133df565b50606082015181600301908161090791906133df565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fac9b83534845c9e785a6ea70f2d809db1d72ef9a1d981753712d922f5cb55f39868686866040516109ae94939291906134b1565b60405180910390a3600260008154809291906109c990613533565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610a679061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610a939061320c565b8015610ae05780601f10610ab557610100808354040283529160200191610ae0565b820191906000526020600020905b815481529060010190602001808311610ac357829003601f168201915b505050505090806002018054610af59061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b219061320c565b8015610b6e5780601f10610b4357610100808354040283529160200191610b6e565b820191906000526020600020905b815481529060010190602001808311610b5157829003601f168201915b505050505090806003018054610b839061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054610baf9061320c565b8015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b6060600a6000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610ccc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c82575b50505050509050919050565b600060036000838152602001908152602001600020905080600701544210610d35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2c906135c7565b60405180910390fd5b60003411610d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6f90613633565b60405180910390fd5b34816005016000828254610d8c9190613653565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df39190613653565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610ec657600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610ef35760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610f3d929190613687565b60405180910390a35050565b60086020528060005260406000206000915090505481565b60008060008060005b60025481101561103d576004600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610fd09190613653565b92506005600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261102e9190613653565b91508080600101915050610f6a565b508181935093505050915091565b60076020528160005260406000206020528060005260406000206000915091505080546110779061320c565b80601f01602080910402602001604051908101604052809291908181526020018280546110a39061320c565b80156110f05780601f106110c5576101008083540402835291602001916110f0565b820191906000526020600020905b8154815290600101906020018083116110d357829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b600c602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e8906136fc565b60405180910390fd5b8060080160009054906101000a900460ff1615611243576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123a90613768565b60405180910390fd5b6000831115611256578281600401819055505b42821115611268578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611362611fc5565b61136c600061204c565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140e906137fa565b60405180910390fd5b601e8414806114265750603284145b806114315750604684145b8061143c5750606484145b61147b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147290613866565b60405180910390fd5b806009015484116114c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b8906138f8565b60405180910390fd5b600081600901541115611564576000600a600087815260200190815260200160002080549050905060006114f482612110565b905080600b6000898152602001908152602001600020600085600901548152602001908152602001600020541015611561576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611558906139b0565b60405180910390fd5b50505b838160090181905550828260066000888152602001908152602001600020600087815260200190815260200160002091826115a09291906139db565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c18585856040516115d593929190613ad8565b60405180910390a25050505050565b600a602052816000526040600020818154811061160057600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806003600084815260200190815260200160002090506000600a6000858152602001908152602001600020805490509050600061169982612110565b905060008360090154036116b357600193505050506116e5565b80600b600087815260200190815260200160002060008560090154815260200190815260200160002054101593505050505b919050565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118061179a575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6117d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d090613b56565b60405180910390fd5b600060036000888152602001908152602001600020905085816009015414611836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182d90613be8565b60405180910390fd5b806004015481600501541015611881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161187890613c7a565b60405180910390fd5b8484600760008a8152602001908152602001600020600089815260200190815260200160002091826118b49291906139db565b506000600a600089815260200190815260200160002080549050905060006118db82612110565b9050841561196457600b60008a81526020019081526020016000206000898152602001908152602001600020600081548092919061191890613533565b919050555080600b60008b815260200190815260200160002060008a8152602001908152602001600020541061195457611953898985612132565b5b61195f8984336122e5565b611a0b565b600c60008a81526020019081526020016000206000898152602001908152602001600020600081548092919061199990613533565b91905055506002826119ab9190613cc9565b600c60008b815260200190815260200160002060008a8152602001908152602001600020541115611a0a57601e88146119f457601483600901546119ef9190613cfa565b6119f7565b60005b8360090181905550611a0989896126de565b5b5b887fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a0888888604051611a3f93929190613d2e565b60405180910390a2505050505050505050565b6006602052816000526040600020602052806000526040600020600091509150508054611a7e9061320c565b80601f0160208091040260200160405190810160405280929190818152602001828054611aaa9061320c565b8015611af75780601f10611acc57610100808354040283529160200191611af7565b820191906000526020600020905b815481529060010190602001808311611ada57829003601f168201915b505050505081565b600060036000848152602001908152602001600020905080600701544210611b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b53906135c7565b60405180910390fd5b60008211611b9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9690613633565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611bfe93929190613d60565b6020604051808303816000875af1158015611c1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c419190613dac565b611c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7790613e25565b60405180910390fd5b81816005016000828254611c949190613653565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611cfb9190613653565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403611dce57600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f846000604051611e18929190613687565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611e84929190613e45565b6020604051808303816000875af1158015611ea3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec79190613dac565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600b602052816000526040600020602052806000526040600020600091509150505481565b611f21611fc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f935760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611f8a9190612f3b565b60405180910390fd5b611f9c8161204c565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fcd612736565b73ffffffffffffffffffffffffffffffffffffffff16611feb611632565b73ffffffffffffffffffffffffffffffffffffffff161461204a5761200e612736565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016120419190612f3b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060026001836121219190613653565b61212b9190613cc9565b9050919050565b600060648383600401546121469190613e6e565b6121509190613cc9565b905060008260060154826121649190613cfa565b905060008111156122de57808360060160008282546121839190613653565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121fd9190613653565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050509050806122a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161229890613efc565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e8360006040516122d4929190613687565b60405180910390a2505b5050505050565b6000670de0b6b3a764000090506000600a600086815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561238757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161233d575b5050505050905060006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411612421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161241890613f68565b60405180910390fd5b60006005600087815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561255a57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016124d7929190613e45565b6020604051808303816000875af11580156124f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251a9190613dac565b612559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161255090613fd4565b60405180910390fd5b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016125db929190614015565b6020604051808303816000875af11580156125fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261e9190613dac565b61265d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126549061408a565b60405180910390fd5b81600860008660000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546126d09190613653565b925050819055505050505050565b6000600b60008481526020019081526020016000206000838152602001908152602001600020819055506000600c60008481526020019081526020016000206000838152602001908152602001600020819055505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6127a58261275c565b810181811067ffffffffffffffff821117156127c4576127c361276d565b5b80604052505050565b60006127d761273e565b90506127e3828261279c565b919050565b600067ffffffffffffffff8211156128035761280261276d565b5b61280c8261275c565b9050602081019050919050565b82818337600083830152505050565b600061283b612836846127e8565b6127cd565b90508281526020810184848401111561285757612856612757565b5b612862848285612819565b509392505050565b600082601f83011261287f5761287e612752565b5b813561288f848260208601612828565b91505092915050565b6000819050919050565b6128ab81612898565b81146128b657600080fd5b50565b6000813590506128c8816128a2565b92915050565b600080600080600060a086880312156128ea576128e9612748565b5b600086013567ffffffffffffffff8111156129085761290761274d565b5b6129148882890161286a565b955050602086013567ffffffffffffffff8111156129355761293461274d565b5b6129418882890161286a565b945050604086013567ffffffffffffffff8111156129625761296161274d565b5b61296e8882890161286a565b935050606061297f888289016128b9565b9250506080612990888289016128b9565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129c88261299d565b9050919050565b6129d8816129bd565b81146129e357600080fd5b50565b6000813590506129f5816129cf565b92915050565b600060208284031215612a1157612a10612748565b5b6000612a1f848285016129e6565b91505092915050565b612a3181612898565b82525050565b6000602082019050612a4c6000830184612a28565b92915050565b600060208284031215612a6857612a67612748565b5b6000612a76848285016128b9565b91505092915050565b6000612a8a8261299d565b9050919050565b612a9a81612a7f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ada578082015181840152602081019050612abf565b60008484015250505050565b6000612af182612aa0565b612afb8185612aab565b9350612b0b818560208601612abc565b612b148161275c565b840191505092915050565b60008115159050919050565b612b3481612b1f565b82525050565b600061014082019050612b50600083018d612a91565b8181036020830152612b62818c612ae6565b90508181036040830152612b76818b612ae6565b90508181036060830152612b8a818a612ae6565b9050612b996080830189612a28565b612ba660a0830188612a28565b612bb360c0830187612a28565b612bc060e0830186612a28565b612bce610100830185612b2b565b612bdc610120830184612a28565b9b9a5050505050505050505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612c20816129bd565b82525050565b6000612c328383612c17565b60208301905092915050565b6000602082019050919050565b6000612c5682612beb565b612c608185612bf6565b9350612c6b83612c07565b8060005b83811015612c9c578151612c838882612c26565b9750612c8e83612c3e565b925050600181019050612c6f565b5085935050505092915050565b60006020820190508181036000830152612cc38184612c4b565b905092915050565b6000604082019050612ce06000830185612a28565b612ced6020830184612a28565b9392505050565b60008060408385031215612d0b57612d0a612748565b5b6000612d19858286016128b9565b9250506020612d2a858286016128b9565b9150509250929050565b60006020820190508181036000830152612d4e8184612ae6565b905092915050565b60008060408385031215612d6d57612d6c612748565b5b6000612d7b858286016128b9565b9250506020612d8c858286016129e6565b9150509250929050565b600080600060608486031215612daf57612dae612748565b5b6000612dbd868287016128b9565b9350506020612dce868287016128b9565b9250506040612ddf868287016128b9565b9150509250925092565b612df2816129bd565b82525050565b600060e082019050612e0d600083018a612de9565b612e1a6020830189612a28565b612e276040830188612a28565b612e346060830187612a28565b612e416080830186612b2b565b612e4e60a0830185612a28565b612e5b60c0830184612a28565b98975050505050505050565b600080fd5b600080fd5b60008083601f840112612e8757612e86612752565b5b8235905067ffffffffffffffff811115612ea457612ea3612e67565b5b602083019150836001820283011115612ec057612ebf612e6c565b5b9250929050565b60008060008060608587031215612ee157612ee0612748565b5b6000612eef878288016128b9565b9450506020612f00878288016128b9565b935050604085013567ffffffffffffffff811115612f2157612f2061274d565b5b612f2d87828801612e71565b925092505092959194509250565b6000602082019050612f506000830184612de9565b92915050565b6000602082019050612f6b6000830184612b2b565b92915050565b612f7a81612b1f565b8114612f8557600080fd5b50565b600081359050612f9781612f71565b92915050565b600080600080600060808688031215612fb957612fb8612748565b5b6000612fc7888289016128b9565b9550506020612fd8888289016128b9565b945050604086013567ffffffffffffffff811115612ff957612ff861274d565b5b61300588828901612e71565b9350935050606061301888828901612f88565b9150509295509295909350565b6000806040838503121561303c5761303b612748565b5b600061304a858286016129e6565b925050602061305b858286016128b9565b9150509250929050565b6000819050919050565b600061308a6130856130808461299d565b613065565b61299d565b9050919050565b600061309c8261306f565b9050919050565b60006130ae82613091565b9050919050565b6130be816130a3565b82525050565b60006020820190506130d960008301846130b5565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b600061313b602283612aab565b9150613146826130df565b604082019050919050565b6000602082019050818103600083015261316a8161312e565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b60006131a7601e83612aab565b91506131b282613171565b602082019050919050565b600060208201905081810360008301526131d68161319a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061322457607f821691505b602082108103613237576132366131dd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261329f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613262565b6132a98683613262565b95508019841693508086168417925050509392505050565b60006132dc6132d76132d284612898565b613065565b612898565b9050919050565b6000819050919050565b6132f6836132c1565b61330a613302826132e3565b84845461326f565b825550505050565b600090565b61331f613312565b61332a8184846132ed565b505050565b5b8181101561334e57613343600082613317565b600181019050613330565b5050565b601f821115613393576133648161323d565b61336d84613252565b8101602085101561337c578190505b61339061338885613252565b83018261332f565b50505b505050565b600082821c905092915050565b60006133b660001984600802613398565b1980831691505092915050565b60006133cf83836133a5565b9150826002028217905092915050565b6133e882612aa0565b67ffffffffffffffff8111156134015761340061276d565b5b61340b825461320c565b613416828285613352565b600060209050601f8311600181146134495760008415613437578287015190505b61344185826133c3565b8655506134a9565b601f1984166134578661323d565b60005b8281101561347f5784890151825560018201915060208501945060208101905061345a565b8683101561349c5784890151613498601f8916826133a5565b8355505b6001600288020188555050505b505050505050565b600060808201905081810360008301526134cb8187612ae6565b905081810360208301526134df8186612ae6565b90506134ee6040830185612a28565b6134fb6060830184612a28565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061353e82612898565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036135705761356f613504565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b60006135b1601e83612aab565b91506135bc8261357b565b602082019050919050565b600060208201905081810360008301526135e0816135a4565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b600061361d601d83612aab565b9150613628826135e7565b602082019050919050565b6000602082019050818103600083015261364c81613610565b9050919050565b600061365e82612898565b915061366983612898565b925082820190508082111561368157613680613504565b5b92915050565b600060408201905061369c6000830185612a28565b6136a96020830184612b2b565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b60006136e6601f83612aab565b91506136f1826136b0565b602082019050919050565b60006020820190508181036000830152613715816136d9565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b6000613752601c83612aab565b915061375d8261371c565b602082019050919050565b6000602082019050818103600083015261378181613745565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b60006137e4602883612aab565b91506137ef82613788565b604082019050919050565b60006020820190508181036000830152613813816137d7565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b6000613850601683612aab565b915061385b8261381a565b602082019050919050565b6000602082019050818103600083015261387f81613843565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b60006138e2602e83612aab565b91506138ed82613886565b604082019050919050565b60006020820190508181036000830152613911816138d5565b9050919050565b7f43757272656e742070726f677265737320686173206e6f74206265656e20617060008201527f70726f76656420627920746865206d616a6f72697479206f6620696e7665737460208201527f6f72730000000000000000000000000000000000000000000000000000000000604082015250565b600061399a604383612aab565b91506139a582613918565b606082019050919050565b600060208201905081810360008301526139c98161398d565b9050919050565b600082905092915050565b6139e583836139d0565b67ffffffffffffffff8111156139fe576139fd61276d565b5b613a08825461320c565b613a13828285613352565b6000601f831160018114613a425760008415613a30578287013590505b613a3a85826133c3565b865550613aa2565b601f198416613a508661323d565b60005b82811015613a7857848901358255600182019150602085019450602081019050613a53565b86831015613a955784890135613a91601f8916826133a5565b8355505b6001600288020188555050505b50505050505050565b6000613ab78385612aab565b9350613ac4838584612819565b613acd8361275c565b840190509392505050565b6000604082019050613aed6000830186612a28565b8181036020830152613b00818486613aab565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b6000613b40601983612aab565b9150613b4b82613b0a565b602082019050919050565b60006020820190508181036000830152613b6f81613b33565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b6000613bd2603083612aab565b9150613bdd82613b76565b604082019050919050565b60006020820190508181036000830152613c0181613bc5565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613c64602383612aab565b9150613c6f82613c08565b604082019050919050565b60006020820190508181036000830152613c9381613c57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613cd482612898565b9150613cdf83612898565b925082613cef57613cee613c9a565b5b828204905092915050565b6000613d0582612898565b9150613d1083612898565b9250828203905081811115613d2857613d27613504565b5b92915050565b60006040820190508181036000830152613d49818587613aab565b9050613d586020830184612b2b565b949350505050565b6000606082019050613d756000830186612de9565b613d826020830185612de9565b613d8f6040830184612a28565b949350505050565b600081519050613da681612f71565b92915050565b600060208284031215613dc257613dc1612748565b5b6000613dd084828501613d97565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000613e0f601583612aab565b9150613e1a82613dd9565b602082019050919050565b60006020820190508181036000830152613e3e81613e02565b9050919050565b6000604082019050613e5a6000830185612de9565b613e676020830184612a28565b9392505050565b6000613e7982612898565b9150613e8483612898565b9250828202613e9281612898565b91508282048414831517613ea957613ea8613504565b5b5092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000613ee6601383612aab565b9150613ef182613eb0565b602082019050919050565b60006020820190508181036000830152613f1581613ed9565b9050919050565b7f6e6f20616d6f756e740000000000000000000000000000000000000000000000600082015250565b6000613f52600983612aab565b9150613f5d82613f1c565b602082019050919050565b60006020820190508181036000830152613f8181613f45565b9050919050565b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b6000613fbe601f83612aab565b9150613fc982613f88565b602082019050919050565b60006020820190508181036000830152613fed81613fb1565b9050919050565b6000613fff82613091565b9050919050565b61400f81613ff4565b82525050565b600060408201905061402a6000830185614006565b6140376020830184612a28565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b6000614074601e83612aab565b915061407f8261403e565b602082019050919050565b600060208201905081810360008301526140a381614067565b905091905056fea2646970667358221220773de6c83c7a66e36459aa6f459283f62eda3c4e67ff3698ba41f07c1450c84364736f6c63430008180033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 285,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 288,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 293,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)282_storage)"
      },
      {
        "astId": 299,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "contributions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "ethContributions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 311,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDetails",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 317,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "approvalComments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 321,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorBalances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorEthBalances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectInvestors",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 336,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressApprovals",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 342,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDisapprovals",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Project)282_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FrogFund.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)282_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)282_storage": {
        "encoding": "inplace",
        "label": "struct FrogFund.Project",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 265,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "link",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "goalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "amountDistributed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "deadline",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 281,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentProgress",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}