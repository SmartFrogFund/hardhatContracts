{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProgressReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "progress",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "ProgressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "RefundIssued",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approvalComments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorEthBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ethContributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getPlatformBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectInvestors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDistributed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "currentProgress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_comment",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "updateProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1af0aae389e89e0c25d468a44cc11375e153a117f57e72ce9c2aad05320b50d1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "3340345",
    "logsBloom": "0x
    "blockHash": "0x253a72ef5e00afb1ef9858f8aae5f24a75d8952b51afd5c6b777ea1a0f40c2d6",
    "transactionHash": "0x1af0aae389e89e0c25d468a44cc11375e153a117f57e72ce9c2aad05320b50d1",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x1af0aae389e89e0c25d468a44cc11375e153a117f57e72ce9c2aad05320b50d1",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x253a72ef5e00afb1ef9858f8aae5f24a75d8952b51afd5c6b777ea1a0f40c2d6"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0x1af0aae389e89e0c25d468a44cc11375e153a117f57e72ce9c2aad05320b50d1",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x253a72ef5e00afb1ef9858f8aae5f24a75d8952b51afd5c6b777ea1a0f40c2d6"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "3340345",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x085500B2462eC1B4f3A4fc40c29de9243533F5D6"
  ],
  "numDeployments": 1,
  "solcInputHash": "1d9700265a7fec759e6742bc7d6d4af9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProgressReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalComments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorEthBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPlatformBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDistributed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentProgress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"reviewProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartFrogFund.sol\":\"FrogFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartFrogFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.24;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract FrogFund is Ownable {\\r\\n    struct Project {\\r\\n        address payable creator; // \\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n        string title; // \\u9879\\u76ee\\u6807\\u9898\\r\\n        string description; // \\u9879\\u76ee\\u63cf\\u8ff0\\r\\n        string link; // \\u9879\\u76ee\\u94fe\\u63a5\\r\\n        uint256 goalAmount; // \\u76ee\\u6807\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 currentAmount; // \\u5f53\\u524d\\u7b79\\u96c6\\u91d1\\u989d\\r\\n        uint256 amountDistributed; // \\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n        uint256 deadline; // \\u622a\\u6b62\\u65e5\\u671f\\r\\n        bool completed; // \\u9879\\u76ee\\u72b6\\u6001\\r\\n        uint256 currentProgress; // 0, 30, 50, 70, 100 \\u9879\\u76ee\\u8fdb\\u5ea6\\r\\n    }\\r\\n\\r\\n    IERC20 public token;\\r\\n    uint256 public projectCount = 0;\\r\\n    mapping(uint256 => Project) public projects;\\r\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\r\\n    mapping(uint256 => mapping(address => uint256)) public ethContributions;\\r\\n    mapping(uint256 => mapping(uint256 => string)) public progressDetails; // projectId => progress => details\\r\\n    mapping(uint256 => mapping(uint256 => string)) public approvalComments; // projectId => progress => comment\\r\\n    mapping(address => uint256) public creatorBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ERC20\\u4f59\\u989d\\r\\n    mapping(address => uint256) public creatorEthBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ETH\\u4f59\\u989d\\r\\n    mapping(uint256 => address[]) public projectInvestors; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u7684\\u6295\\u8d44\\u8005\\r\\n    modifier onlyInvestor(uint256 _projectId) {\\r\\n        require(\\r\\n            ethContributions[_projectId][msg.sender] > 0 ||\\r\\n                contributions[_projectId][msg.sender] > 0,\\r\\n            \\\"Caller is not an investor\\\"\\r\\n        );\\r\\n        _;\\r\\n    }\\r\\n    event ProjectCreated(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed creator,\\r\\n        uint256 goalAmount,\\r\\n        uint256 deadline\\r\\n    );\\r\\n    event ProjectFunded(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressUpdated(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 progress,\\r\\n        string details\\r\\n    );\\r\\n    event FundsDistributed(\\r\\n        uint256 indexed projectId,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event RefundIssued(\\r\\n        uint256 indexed projectId,\\r\\n        address indexed supporter,\\r\\n        uint256 amount,\\r\\n        bool isEth\\r\\n    );\\r\\n    event ProgressReviewed(\\r\\n        uint256 indexed projectId,\\r\\n        string comment,\\r\\n        bool approved\\r\\n    );\\r\\n\\r\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\r\\n        token = IERC20(_tokenAddress);\\r\\n        transferOwnership(msg.sender);\\r\\n    }\\r\\n\\r\\n    function createProject(\\r\\n        string memory _title,\\r\\n        string memory _description,\\r\\n        string memory _link,\\r\\n        uint256 _goalAmount,\\r\\n        uint256 _deadline\\r\\n    ) external {\\r\\n        require(_goalAmount > 0, \\\"Goal amount must be greater than 0\\\");\\r\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\r\\n\\r\\n        projects[projectCount] = Project({\\r\\n            creator: payable(msg.sender),\\r\\n            title: _title,\\r\\n            description: _description,\\r\\n            link: _link,\\r\\n            goalAmount: _goalAmount,\\r\\n            currentAmount: 0,\\r\\n            deadline: _deadline,\\r\\n            completed: false,\\r\\n            currentProgress: 0,\\r\\n            amountDistributed: 0\\r\\n        });\\r\\n\\r\\n        emit ProjectCreated(projectCount, msg.sender, _goalAmount, _deadline);\\r\\n        projectCount++;\\r\\n    }\\r\\n\\r\\n    function supportProjectWithToken(\\r\\n        uint256 _projectId,\\r\\n        uint256 _amount\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\r\\n        require(\\r\\n            token.transferFrom(msg.sender, address(this), _amount),\\r\\n            \\\"Token transfer failed\\\"\\r\\n        );\\r\\n\\r\\n        project.currentAmount += _amount;\\r\\n        contributions[_projectId][msg.sender] += _amount;\\r\\n\\r\\n        if (contributions[_projectId][msg.sender] == _amount) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, _amount, false);\\r\\n    }\\r\\n\\r\\n    function supportProjectWithEth(uint256 _projectId) external payable {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            block.timestamp < project.deadline,\\r\\n            \\\"Project funding period is over\\\"\\r\\n        );\\r\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\r\\n\\r\\n        project.currentAmount += msg.value;\\r\\n        ethContributions[_projectId][msg.sender] += msg.value;\\r\\n\\r\\n        if (ethContributions[_projectId][msg.sender] == msg.value) {\\r\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\r\\n            projectInvestors[_projectId].push(msg.sender);\\r\\n        }\\r\\n        if (project.currentAmount >= project.goalAmount) {\\r\\n            // \\u8fbe\\u5230\\u76ee\\u6807\\u91d1\\u989d\\r\\n            project.completed = true;\\r\\n        }\\r\\n\\r\\n        emit ProjectFunded(_projectId, msg.sender, msg.value, true);\\r\\n    }\\r\\n\\r\\n    function updateProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _details\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress == 30 ||\\r\\n                _progress == 50 ||\\r\\n                _progress == 70 ||\\r\\n                _progress == 100,\\r\\n            \\\"Invalid progress value\\\"\\r\\n        );\\r\\n        require(\\r\\n            _progress > project.currentProgress,\\r\\n            \\\"Progress must be greater than current progress\\\"\\r\\n        );\\r\\n\\r\\n        project.currentProgress = _progress;\\r\\n        progressDetails[_projectId][_progress] = _details;\\r\\n\\r\\n        emit ProgressUpdated(_projectId, _progress, _details);\\r\\n    }\\r\\n\\r\\n    function reviewProgress(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        string calldata _comment,\\r\\n        bool _approved\\r\\n    ) external onlyInvestor(_projectId) {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            project.currentProgress == _progress,\\r\\n            \\\"Progress does not match current project progress\\\"\\r\\n        );\\r\\n        require(\\r\\n            project.currentAmount >= project.goalAmount,\\r\\n            \\\"Project has not reached goal amount\\\"\\r\\n        );\\r\\n\\r\\n        approvalComments[_projectId][_progress] = _comment;\\r\\n\\r\\n        if (_approved) {\\r\\n            // \\u8ba1\\u7b97\\u5e76\\u53d1\\u653e\\u8d44\\u91d1\\r\\n            distributeFunds(_projectId, _progress, project);\\r\\n\\r\\n            // \\u5206\\u914d\\u5956\\u52b1\\u7ed9\\u6295\\u8d44\\u4eba\\u548c\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            distributeRewards(_projectId, project);\\r\\n        } else {\\r\\n            project.currentProgress = _progress == 30\\r\\n                ? 0\\r\\n                : project.currentProgress - 20;\\r\\n        }\\r\\n\\r\\n        emit ProgressReviewed(_projectId, _comment, _approved);\\r\\n    }\\r\\n\\r\\n    function distributeFunds(\\r\\n        uint256 _projectId,\\r\\n        uint256 _progress,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 totalAmountToDistribute = (project.goalAmount * _progress) /\\r\\n            100;\\r\\n        uint256 amountToDistribute = totalAmountToDistribute - project.amountDistributed;\\r\\n\\r\\n        if (amountToDistribute > 0) {\\r\\n            project.amountDistributed += amountToDistribute; // \\u66f4\\u65b0\\u5df2\\u53d1\\u653e\\u91d1\\u989d\\r\\n            creatorEthBalances[project.creator] += amountToDistribute; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaETH\\u4f59\\u989d\\r\\n            // \\u5b9e\\u9645\\u8f6c\\u79fbETH\\u5230\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\r\\n            (bool success, ) = project.creator.call{value: amountToDistribute}(\\r\\n                \\\"\\\"\\r\\n            );\\r\\n            require(success, \\\"ETH transfer failed\\\");\\r\\n\\r\\n            emit FundsDistributed(_projectId, amountToDistribute, false);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function distributeRewards(\\r\\n        uint256 _projectId,\\r\\n        Project storage project\\r\\n    ) internal {\\r\\n        uint256 reward = 1 * 10 ** 18; // \\u8bbe\\u7f6e\\u5956\\u52b1\\u6570\\u989d\\uff0c\\u60a8\\u53ef\\u4ee5\\u6839\\u636e\\u5b9e\\u9645\\u60c5\\u51b5\\u8c03\\u6574\\r\\n        token.approve(address(this), reward);\\r\\n        address[] memory investors = projectInvestors[_projectId];\\r\\n        for (uint256 i = 0; i < investors.length; i++) {\\r\\n            address investor = investors[i];\\r\\n            if (contributions[_projectId][investor] > 0) {\\r\\n                require(\\r\\n                    token.transfer(investor, reward),\\r\\n                    \\\"Investor reward transfer failed\\\"\\r\\n                );\\r\\n            }\\r\\n        }\\r\\n        require(\\r\\n            token.transfer(project.creator, reward),\\r\\n            \\\"Creator reward transfer failed\\\"\\r\\n        );\\r\\n        creatorBalances[project.creator] += reward; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaERC20\\u4f59\\u989d\\r\\n    }\\r\\n\\r\\n    function updateProject(\\r\\n        uint256 _projectId,\\r\\n        uint256 _newGoalAmount,\\r\\n        uint256 _newDeadline\\r\\n    ) external {\\r\\n        Project storage project = projects[_projectId];\\r\\n        require(\\r\\n            msg.sender == project.creator,\\r\\n            \\\"Only project creator can update\\\"\\r\\n        );\\r\\n        require(!project.completed, \\\"Project is already completed\\\");\\r\\n\\r\\n        if (_newGoalAmount > 0) {\\r\\n            project.goalAmount = _newGoalAmount;\\r\\n        }\\r\\n        if (_newDeadline > block.timestamp) {\\r\\n            project.deadline = _newDeadline;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getProjectDetails(\\r\\n        uint256 _projectId\\r\\n    )\\r\\n        external\\r\\n        view\\r\\n        returns (address, uint256, uint256, uint256, bool, uint256,uint256)\\r\\n    {\\r\\n        Project storage project = projects[_projectId];\\r\\n        return (\\r\\n            project.creator,\\r\\n            project.goalAmount,\\r\\n            project.currentAmount,\\r\\n            project.deadline,\\r\\n            project.completed,\\r\\n            project.currentProgress,\\r\\n            project.amountDistributed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getPlatformBalance(address _user) external view returns (uint256) {\\r\\n        uint256 totalTokenBalance = 0;\\r\\n        uint256 totalEthBalance = 0;\\r\\n        for (uint256 i = 0; i < projectCount; i++) {\\r\\n            totalTokenBalance += contributions[i][_user];\\r\\n            totalEthBalance += ethContributions[i][_user];\\r\\n        }\\r\\n        return totalTokenBalance + totalEthBalance;\\r\\n    }\\r\\n\\r\\n    function getCreatorBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorBalances[_creator];\\r\\n    }\\r\\n\\r\\n    function getCreatorEthBalance(\\r\\n        address _creator\\r\\n    ) external view returns (uint256) {\\r\\n        return creatorEthBalances[_creator];\\r\\n    }\\r\\n    function transferTokens(address to, uint256 value) external returns (bool) {\\r\\n        return token.transfer(to, value);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x45bb4d3e999a84407e3ea5b9ef8f5d9c1af423f13636781b41ee1a29627b979d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b5060405162003e9f38038062003e9f83398181016040528101906200003c9190620003b7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620003fa565b60405180910390fd5b620000c3816200011d60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011633620001e160201b60201c565b5062000417565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f16200027a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002665760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200025d9190620003fa565b60405180910390fd5b62000277816200011d60201b60201c565b50565b6200028a6200031c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002b06200032460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200031a57620002dc6200031c60201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620003119190620003fa565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200037f8262000352565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf6200034d565b5b6000620003e084828501620003a0565b91505092915050565b620003f48162000372565b82525050565b6000602082019050620004116000830184620003e9565b92915050565b613a7880620004276000396000f3fe60806040526004361061014b5760003560e01c80636a78c833116100b6578063b9b1060b1161006f578063b9b1060b146104ee578063bbbf146a1461052b578063bec3fa1714610554578063d5f2cf0514610591578063f2fde38b146105ce578063fc0c546a146105f75761014b565b80636a78c833146103e0578063715018a61461041d5780637a25f100146104345780638b44da951461045d5780638da5cb5b1461049a578063b93a5339146104c55761014b565b8063350d171711610108578063350d17171461029257806336fbad26146102cf5780633d891f59146102fa5780635955eb15146103375780635b325968146103605780635f8439e31461039d5761014b565b8063056c29ee1461015057806309cf7ffc14610179578063107046bd146101b65780631b5d5f81146101fc5780632a782802146102185780633170ee1d14610255575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190612448565b610622565b005b34801561018557600080fd5b506101a0600480360381019061019b9190612575565b610870565b6040516101ad91906125b1565b60405180910390f35b3480156101c257600080fd5b506101dd60048036038101906101d891906125cc565b6108b9565b6040516101f39a999897969594939291906126b4565b60405180910390f35b610216600480360381019061021191906125cc565b610ad2565b005b34801561022457600080fd5b5061023f600480360381019061023a9190612575565b610d43565b60405161024c91906125b1565b60405180910390f35b34801561026157600080fd5b5061027c60048036038101906102779190612575565b610d5b565b60405161028991906125b1565b60405180910390f35b34801561029e57600080fd5b506102b960048036038101906102b49190612765565b610e4f565b6040516102c691906127a5565b60405180910390f35b3480156102db57600080fd5b506102e4610efc565b6040516102f191906125b1565b60405180910390f35b34801561030657600080fd5b50610321600480360381019061031c91906127c7565b610f02565b60405161032e91906125b1565b60405180910390f35b34801561034357600080fd5b5061035e60048036038101906103599190612807565b610f27565b005b34801561036c57600080fd5b5061038760048036038101906103829190612575565b61104d565b60405161039491906125b1565b60405180910390f35b3480156103a957600080fd5b506103c460048036038101906103bf91906125cc565b611065565b6040516103d79796959493929190612869565b60405180910390f35b3480156103ec57600080fd5b5061040760048036038101906104029190612575565b6110f0565b60405161041491906125b1565b60405180910390f35b34801561042957600080fd5b50610432611139565b005b34801561044057600080fd5b5061045b60048036038101906104569190612938565b61114d565b005b34801561046957600080fd5b50610484600480360381019061047f9190612765565b611320565b60405161049191906129ac565b60405180910390f35b3480156104a657600080fd5b506104af61136e565b6040516104bc91906129ac565b60405180910390f35b3480156104d157600080fd5b506104ec60048036038101906104e791906129f3565b611397565b005b3480156104fa57600080fd5b5061051560048036038101906105109190612765565b6115f1565b60405161052291906127a5565b60405180910390f35b34801561053757600080fd5b50610552600480360381019061054d9190612765565b61169e565b005b34801561056057600080fd5b5061057b60048036038101906105769190612a7b565b6119c4565b6040516105889190612abb565b60405180910390f35b34801561059d57600080fd5b506105b860048036038101906105b391906127c7565b611a6e565b6040516105c591906125b1565b60405180910390f35b3480156105da57600080fd5b506105f560048036038101906105f09190612575565b611a93565b005b34801561060357600080fd5b5061060c611b19565b6040516106199190612b35565b60405180910390f35b60008211610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90612bc2565b60405180910390fd5b4281116106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90612c2e565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161077a9190612e50565b5060408201518160020190816107909190612e50565b5060608201518160030190816107a69190612e50565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fb5d890eb2df709d2f732ed81f328b444e49c1618ed8d64c53c0a040ec4040e1e8484604051610849929190612f22565b60405180910390a36002600081548092919061086490612f7a565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461090290612c7d565b80601f016020809104026020016040519081016040528092919081815260200182805461092e90612c7d565b801561097b5780601f106109505761010080835404028352916020019161097b565b820191906000526020600020905b81548152906001019060200180831161095e57829003601f168201915b50505050509080600201805461099090612c7d565b80601f01602080910402602001604051908101604052809291908181526020018280546109bc90612c7d565b8015610a095780601f106109de57610100808354040283529160200191610a09565b820191906000526020600020905b8154815290600101906020018083116109ec57829003601f168201915b505050505090806003018054610a1e90612c7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4a90612c7d565b8015610a975780601f10610a6c57610100808354040283529160200191610a97565b820191906000526020600020905b815481529060010190602001808311610a7a57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b600060036000838152602001908152602001600020905080600701544210610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b269061300e565b60405180910390fd5b60003411610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b699061307a565b60405180910390fd5b34816005016000828254610b86919061309a565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bed919061309a565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610cc057600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610ced5760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610d379291906130ce565b60405180910390a35050565b60086020528060005260406000206000915090505481565b600080600090506000805b600254811015610e39576004600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610dcc919061309a565b92506005600082815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610e2a919061309a565b91508080600101915050610d66565b508082610e46919061309a565b92505050919050565b6007602052816000526040600020602052806000526040600020600091509150508054610e7b90612c7d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea790612c7d565b8015610ef45780601f10610ec957610100808354040283529160200191610ef4565b820191906000526020600020905b815481529060010190602001808311610ed757829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc790613143565b60405180910390fd5b8060080160009054906101000a900460ff1615611022576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611019906131af565b60405180910390fd5b6000831115611035578281600401819055505b42821115611047578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611141611b3f565b61114b6000611bc6565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ed90613241565b60405180910390fd5b601e8414806112055750603284145b806112105750604684145b8061121b5750606484145b61125a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611251906132ad565b60405180910390fd5b806009015484116112a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112979061333f565b60405180910390fd5b838160090181905550828260066000888152602001908152602001600020600087815260200190815260200160002091826112dc92919061336a565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c185858560405161131193929190613467565b60405180910390a25050505050565b600a602052816000526040600020818154811061133c57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541180611447575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b611486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147d906134e5565b60405180910390fd5b6000600360008881526020019081526020016000209050858160090154146114e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114da90613577565b60405180910390fd5b80600401548160050154101561152e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152590613609565b60405180910390fd5b8484600760008a81526020019081526020016000206000898152602001908152602001600020918261156192919061336a565b50821561158257611573878783611c8a565b61157d8782611e70565b6115ac565b601e86146115a0576014816009015461159b9190613629565b6115a3565b60005b81600901819055505b867fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a08686866040516115e09392919061365d565b60405180910390a250505050505050565b600660205281600052604060002060205280600052604060002060009150915050805461161d90612c7d565b80601f016020809104026020016040519081016040528092919081815260200182805461164990612c7d565b80156116965780601f1061166b57610100808354040283529160200191611696565b820191906000526020600020905b81548152906001019060200180831161167957829003601f168201915b505050505081565b6000600360008481526020019081526020016000209050806007015442106116fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f29061300e565b60405180910390fd5b6000821161173e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117359061307a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161179d9392919061368f565b6020604051808303816000875af11580156117bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e091906136db565b61181f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181690613754565b60405180910390fd5b81816005016000828254611833919061309a565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461189a919061309a565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361196d57600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f8460006040516119b79291906130ce565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611a23929190613774565b6020604051808303816000875af1158015611a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6691906136db565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b611a9b611b3f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b0d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611b0491906129ac565b60405180910390fd5b611b1681611bc6565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b476122b0565b73ffffffffffffffffffffffffffffffffffffffff16611b6561136e565b73ffffffffffffffffffffffffffffffffffffffff1614611bc457611b886122b0565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bbb91906129ac565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006064838360040154611c9e919061379d565b611ca8919061380e565b90506000826006015482611cbc9190613629565b90506000811115611e695780836006016000828254611cdb919061309a565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d55919061309a565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051611da690613870565b60006040518083038185875af1925050503d8060008114611de3576040519150601f19603f3d011682016040523d82523d6000602084013e611de8565b606091505b5050905080611e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e23906138d1565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e836000604051611e5f9291906130ce565b60405180910390a2505b5050505050565b6000670de0b6b3a76400009050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330836040518363ffffffff1660e01b8152600401611eda929190613774565b6020604051808303816000875af1158015611ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f1d91906136db565b506000600a6000858152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611fb357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611f69575b5050505050905060005b815181101561212c576000828281518110611fdb57611fda6138f1565b5b6020026020010151905060006004600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561211e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82866040518363ffffffff1660e01b815260040161209b929190613774565b6020604051808303816000875af11580156120ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120de91906136db565b61211d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121149061396c565b60405180910390fd5b5b508080600101915050611fbd565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016121ae9291906139ad565b6020604051808303816000875af11580156121cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f191906136db565b612230576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161222790613a22565b60405180910390fd5b81600860008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546122a3919061309a565b9250508190555050505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61231f826122d6565b810181811067ffffffffffffffff8211171561233e5761233d6122e7565b5b80604052505050565b60006123516122b8565b905061235d8282612316565b919050565b600067ffffffffffffffff82111561237d5761237c6122e7565b5b612386826122d6565b9050602081019050919050565b82818337600083830152505050565b60006123b56123b084612362565b612347565b9050828152602081018484840111156123d1576123d06122d1565b5b6123dc848285612393565b509392505050565b600082601f8301126123f9576123f86122cc565b5b81356124098482602086016123a2565b91505092915050565b6000819050919050565b61242581612412565b811461243057600080fd5b50565b6000813590506124428161241c565b92915050565b600080600080600060a08688031215612464576124636122c2565b5b600086013567ffffffffffffffff811115612482576124816122c7565b5b61248e888289016123e4565b955050602086013567ffffffffffffffff8111156124af576124ae6122c7565b5b6124bb888289016123e4565b945050604086013567ffffffffffffffff8111156124dc576124db6122c7565b5b6124e8888289016123e4565b93505060606124f988828901612433565b925050608061250a88828901612433565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061254282612517565b9050919050565b61255281612537565b811461255d57600080fd5b50565b60008135905061256f81612549565b92915050565b60006020828403121561258b5761258a6122c2565b5b600061259984828501612560565b91505092915050565b6125ab81612412565b82525050565b60006020820190506125c660008301846125a2565b92915050565b6000602082840312156125e2576125e16122c2565b5b60006125f084828501612433565b91505092915050565b600061260482612517565b9050919050565b612614816125f9565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612654578082015181840152602081019050612639565b60008484015250505050565b600061266b8261261a565b6126758185612625565b9350612685818560208601612636565b61268e816122d6565b840191505092915050565b60008115159050919050565b6126ae81612699565b82525050565b6000610140820190506126ca600083018d61260b565b81810360208301526126dc818c612660565b905081810360408301526126f0818b612660565b90508181036060830152612704818a612660565b905061271360808301896125a2565b61272060a08301886125a2565b61272d60c08301876125a2565b61273a60e08301866125a2565b6127486101008301856126a5565b6127566101208301846125a2565b9b9a5050505050505050505050565b6000806040838503121561277c5761277b6122c2565b5b600061278a85828601612433565b925050602061279b85828601612433565b9150509250929050565b600060208201905081810360008301526127bf8184612660565b905092915050565b600080604083850312156127de576127dd6122c2565b5b60006127ec85828601612433565b92505060206127fd85828601612560565b9150509250929050565b6000806000606084860312156128205761281f6122c2565b5b600061282e86828701612433565b935050602061283f86828701612433565b925050604061285086828701612433565b9150509250925092565b61286381612537565b82525050565b600060e08201905061287e600083018a61285a565b61288b60208301896125a2565b61289860408301886125a2565b6128a560608301876125a2565b6128b260808301866126a5565b6128bf60a08301856125a2565b6128cc60c08301846125a2565b98975050505050505050565b600080fd5b600080fd5b60008083601f8401126128f8576128f76122cc565b5b8235905067ffffffffffffffff811115612915576129146128d8565b5b602083019150836001820283011115612931576129306128dd565b5b9250929050565b60008060008060608587031215612952576129516122c2565b5b600061296087828801612433565b945050602061297187828801612433565b935050604085013567ffffffffffffffff811115612992576129916122c7565b5b61299e878288016128e2565b925092505092959194509250565b60006020820190506129c1600083018461285a565b92915050565b6129d081612699565b81146129db57600080fd5b50565b6000813590506129ed816129c7565b92915050565b600080600080600060808688031215612a0f57612a0e6122c2565b5b6000612a1d88828901612433565b9550506020612a2e88828901612433565b945050604086013567ffffffffffffffff811115612a4f57612a4e6122c7565b5b612a5b888289016128e2565b93509350506060612a6e888289016129de565b9150509295509295909350565b60008060408385031215612a9257612a916122c2565b5b6000612aa085828601612560565b9250506020612ab185828601612433565b9150509250929050565b6000602082019050612ad060008301846126a5565b92915050565b6000819050919050565b6000612afb612af6612af184612517565b612ad6565b612517565b9050919050565b6000612b0d82612ae0565b9050919050565b6000612b1f82612b02565b9050919050565b612b2f81612b14565b82525050565b6000602082019050612b4a6000830184612b26565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bac602283612625565b9150612bb782612b50565b604082019050919050565b60006020820190508181036000830152612bdb81612b9f565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b6000612c18601e83612625565b9150612c2382612be2565b602082019050919050565b60006020820190508181036000830152612c4781612c0b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c9557607f821691505b602082108103612ca857612ca7612c4e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612d107fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612cd3565b612d1a8683612cd3565b95508019841693508086168417925050509392505050565b6000612d4d612d48612d4384612412565b612ad6565b612412565b9050919050565b6000819050919050565b612d6783612d32565b612d7b612d7382612d54565b848454612ce0565b825550505050565b600090565b612d90612d83565b612d9b818484612d5e565b505050565b5b81811015612dbf57612db4600082612d88565b600181019050612da1565b5050565b601f821115612e0457612dd581612cae565b612dde84612cc3565b81016020851015612ded578190505b612e01612df985612cc3565b830182612da0565b50505b505050565b600082821c905092915050565b6000612e2760001984600802612e09565b1980831691505092915050565b6000612e408383612e16565b9150826002028217905092915050565b612e598261261a565b67ffffffffffffffff811115612e7257612e716122e7565b5b612e7c8254612c7d565b612e87828285612dc3565b600060209050601f831160018114612eba5760008415612ea8578287015190505b612eb28582612e34565b865550612f1a565b601f198416612ec886612cae565b60005b82811015612ef057848901518255600182019150602085019450602081019050612ecb565b86831015612f0d5784890151612f09601f891682612e16565b8355505b6001600288020188555050505b505050505050565b6000604082019050612f3760008301856125a2565b612f4460208301846125a2565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612f8582612412565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612fb757612fb6612f4b565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b6000612ff8601e83612625565b915061300382612fc2565b602082019050919050565b6000602082019050818103600083015261302781612feb565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000613064601d83612625565b915061306f8261302e565b602082019050919050565b6000602082019050818103600083015261309381613057565b9050919050565b60006130a582612412565b91506130b083612412565b92508282019050808211156130c8576130c7612f4b565b5b92915050565b60006040820190506130e360008301856125a2565b6130f060208301846126a5565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b600061312d601f83612625565b9150613138826130f7565b602082019050919050565b6000602082019050818103600083015261315c81613120565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b6000613199601c83612625565b91506131a482613163565b602082019050919050565b600060208201905081810360008301526131c88161318c565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b600061322b602883612625565b9150613236826131cf565b604082019050919050565b6000602082019050818103600083015261325a8161321e565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b6000613297601683612625565b91506132a282613261565b602082019050919050565b600060208201905081810360008301526132c68161328a565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b6000613329602e83612625565b9150613334826132cd565b604082019050919050565b600060208201905081810360008301526133588161331c565b9050919050565b600082905092915050565b613374838361335f565b67ffffffffffffffff81111561338d5761338c6122e7565b5b6133978254612c7d565b6133a2828285612dc3565b6000601f8311600181146133d157600084156133bf578287013590505b6133c98582612e34565b865550613431565b601f1984166133df86612cae565b60005b82811015613407578489013582556001820191506020850194506020810190506133e2565b868310156134245784890135613420601f891682612e16565b8355505b6001600288020188555050505b50505050505050565b60006134468385612625565b9350613453838584612393565b61345c836122d6565b840190509392505050565b600060408201905061347c60008301866125a2565b818103602083015261348f81848661343a565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b60006134cf601983612625565b91506134da82613499565b602082019050919050565b600060208201905081810360008301526134fe816134c2565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b6000613561603083612625565b915061356c82613505565b604082019050919050565b6000602082019050818103600083015261359081613554565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b60006135f3602383612625565b91506135fe82613597565b604082019050919050565b60006020820190508181036000830152613622816135e6565b9050919050565b600061363482612412565b915061363f83612412565b925082820390508181111561365757613656612f4b565b5b92915050565b6000604082019050818103600083015261367881858761343a565b905061368760208301846126a5565b949350505050565b60006060820190506136a4600083018661285a565b6136b1602083018561285a565b6136be60408301846125a2565b949350505050565b6000815190506136d5816129c7565b92915050565b6000602082840312156136f1576136f06122c2565b5b60006136ff848285016136c6565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b600061373e601583612625565b915061374982613708565b602082019050919050565b6000602082019050818103600083015261376d81613731565b9050919050565b6000604082019050613789600083018561285a565b61379660208301846125a2565b9392505050565b60006137a882612412565b91506137b383612412565b92508282026137c181612412565b915082820484148315176137d8576137d7612f4b565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061381982612412565b915061382483612412565b925082613834576138336137df565b5b828204905092915050565b600081905092915050565b50565b600061385a60008361383f565b91506138658261384a565b600082019050919050565b600061387b8261384d565b9150819050919050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b60006138bb601383612625565b91506138c682613885565b602082019050919050565b600060208201905081810360008301526138ea816138ae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b6000613956601f83612625565b915061396182613920565b602082019050919050565b6000602082019050818103600083015261398581613949565b9050919050565b600061399782612b02565b9050919050565b6139a78161398c565b82525050565b60006040820190506139c2600083018561399e565b6139cf60208301846125a2565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b6000613a0c601e83612625565b9150613a17826139d6565b602082019050919050565b60006020820190508181036000830152613a3b816139ff565b905091905056fea2646970667358221220aff127653f78e2766603f292b9c2e307b1c5b8102ca40e4749fb95312f3d1cd264736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 285,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 288,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 293,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)282_storage)"
      },
      {
        "astId": 299,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "contributions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "ethContributions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 311,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDetails",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 317,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "approvalComments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 321,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorBalances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorEthBalances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectInvestors",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Project)282_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FrogFund.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)282_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)282_storage": {
        "encoding": "inplace",
        "label": "struct FrogFund.Project",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 265,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "link",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "goalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "amountDistributed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "deadline",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 281,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentProgress",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}