{
  "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "comment",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ProgressReviewed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "progress",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "details",
          "type": "string"
        }
      ],
      "name": "ProgressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "ProjectCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "ProjectFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "projectId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isEth",
          "type": "bool"
        }
      ],
      "name": "RefundIssued",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approvalComments",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorEthBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ethContributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "getCreatorEthBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getPlatformBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "getProjectDetails",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "progressDetails",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projectInvestors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountDistributed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "currentProgress",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_comment",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "reviewProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "supportProjectWithToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_progress",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_details",
          "type": "string"
        }
      ],
      "name": "updateProgress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_projectId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newGoalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDeadline",
          "type": "uint256"
        }
      ],
      "name": "updateProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf41ad5281e5c19f311c7c1a30382311fd1f36bb0d44b784a647a2814be6e4a35",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "transactionIndex": 0,
    "gasUsed": "3277533",
    "logsBloom": "0x
    "blockHash": "0x4e7cd2ef4af1b985354eeffd250e4e365fa5d08d3273ad2635b9fec995166063",
    "transactionHash": "0xf41ad5281e5c19f311c7c1a30382311fd1f36bb0d44b784a647a2814be6e4a35",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0xf41ad5281e5c19f311c7c1a30382311fd1f36bb0d44b784a647a2814be6e4a35",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x4e7cd2ef4af1b985354eeffd250e4e365fa5d08d3273ad2635b9fec995166063"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 3,
        "transactionHash": "0xf41ad5281e5c19f311c7c1a30382311fd1f36bb0d44b784a647a2814be6e4a35",
        "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x4e7cd2ef4af1b985354eeffd250e4e365fa5d08d3273ad2635b9fec995166063"
      }
    ],
    "blockNumber": 3,
    "cumulativeGasUsed": "3277533",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x085500B2462eC1B4f3A4fc40c29de9243533F5D6"
  ],
  "numDeployments": 1,
  "solcInputHash": "52728da3d4b898b53f2f2335b609cc06",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"comment\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProgressReviewed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"details\",\"type\":\"string\"}],\"name\":\"ProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"ProjectFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEth\",\"type\":\"bool\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approvalComments\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorEthBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethContributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"getCreatorEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getPlatformBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"progressDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectInvestors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountDistributed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"currentProgress\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_comment\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"reviewProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"supportProjectWithToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_progress\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_details\",\"type\":\"string\"}],\"name\":\"updateProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newGoalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDeadline\",\"type\":\"uint256\"}],\"name\":\"updateProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartFrogFund.sol\":\"FrogFund\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SmartFrogFund.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract FrogFund is Ownable {\\n    struct Project {\\n        address payable creator; // \\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\n        string title; // \\u9879\\u76ee\\u6807\\u9898\\n        string description; // \\u9879\\u76ee\\u63cf\\u8ff0\\n        string link; // \\u9879\\u76ee\\u94fe\\u63a5\\n        uint256 goalAmount; // \\u76ee\\u6807\\u7b79\\u96c6\\u91d1\\u989d\\n        uint256 currentAmount; // \\u5f53\\u524d\\u7b79\\u96c6\\u91d1\\u989d\\n        uint256 amountDistributed; // \\u5df2\\u53d1\\u653e\\u91d1\\u989d\\n        uint256 deadline; // \\u622a\\u6b62\\u65e5\\u671f\\n        bool completed; // \\u9879\\u76ee\\u72b6\\u6001\\n        uint256 currentProgress; // 0, 30, 50, 70, 100 \\u9879\\u76ee\\u8fdb\\u5ea6\\n    }\\n\\n    IERC20 public token;\\n    uint256 public projectCount = 0;\\n    mapping(uint256 => Project) public projects;\\n    mapping(uint256 => mapping(address => uint256)) public contributions;\\n    mapping(uint256 => mapping(address => uint256)) public ethContributions;\\n    mapping(uint256 => mapping(uint256 => string)) public progressDetails; // projectId => progress => details\\n    mapping(uint256 => mapping(uint256 => string)) public approvalComments; // projectId => progress => comment\\n    mapping(address => uint256) public creatorBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ERC20\\u4f59\\u989d\\n    mapping(address => uint256) public creatorEthBalances; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\u7684ETH\\u4f59\\u989d\\n    mapping(uint256 => address[]) public projectInvestors; // \\u8bb0\\u5f55\\u6bcf\\u4e2a\\u9879\\u76ee\\u7684\\u6295\\u8d44\\u8005\\n    modifier onlyInvestor(uint256 _projectId) {\\n        require(\\n            ethContributions[_projectId][msg.sender] > 0 ||\\n                contributions[_projectId][msg.sender] > 0,\\n            \\\"Caller is not an investor\\\"\\n        );\\n        _;\\n    }\\n    event ProjectCreated(\\n        uint256 indexed projectId,\\n        address indexed creator,\\n        uint256 goalAmount,\\n        uint256 deadline\\n    );\\n    event ProjectFunded(\\n        uint256 indexed projectId,\\n        address indexed supporter,\\n        uint256 amount,\\n        bool isEth\\n    );\\n    event ProgressUpdated(\\n        uint256 indexed projectId,\\n        uint256 progress,\\n        string details\\n    );\\n    event FundsDistributed(\\n        uint256 indexed projectId,\\n        uint256 amount,\\n        bool isEth\\n    );\\n    event RefundIssued(\\n        uint256 indexed projectId,\\n        address indexed supporter,\\n        uint256 amount,\\n        bool isEth\\n    );\\n    event ProgressReviewed(\\n        uint256 indexed projectId,\\n        string comment,\\n        bool approved\\n    );\\n\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\n        token = IERC20(_tokenAddress);\\n        transferOwnership(msg.sender);\\n    }\\n\\n    function createProject(\\n        string memory _title,\\n        string memory _description,\\n        string memory _link,\\n        uint256 _goalAmount,\\n        uint256 _deadline\\n    ) external {\\n        require(_goalAmount > 0, \\\"Goal amount must be greater than 0\\\");\\n        require(_deadline > block.timestamp, \\\"Deadline must be in the future\\\");\\n\\n        projects[projectCount] = Project({\\n            creator: payable(msg.sender),\\n            title: _title,\\n            description: _description,\\n            link: _link,\\n            goalAmount: _goalAmount,\\n            currentAmount: 0,\\n            deadline: _deadline,\\n            completed: false,\\n            currentProgress: 0,\\n            amountDistributed: 0\\n        });\\n\\n        emit ProjectCreated(projectCount, msg.sender, _goalAmount, _deadline);\\n        projectCount++;\\n    }\\n\\n    function supportProjectWithToken(\\n        uint256 _projectId,\\n        uint256 _amount\\n    ) external {\\n        Project storage project = projects[_projectId];\\n        require(\\n            block.timestamp < project.deadline,\\n            \\\"Project funding period is over\\\"\\n        );\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(\\n            token.transferFrom(msg.sender, address(this), _amount),\\n            \\\"Token transfer failed\\\"\\n        );\\n\\n        project.currentAmount += _amount;\\n        contributions[_projectId][msg.sender] += _amount;\\n\\n        if (contributions[_projectId][msg.sender] == _amount) {\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\n            projectInvestors[_projectId].push(msg.sender);\\n        }\\n\\n        emit ProjectFunded(_projectId, msg.sender, _amount, false);\\n    }\\n\\n    function supportProjectWithEth(uint256 _projectId) external payable {\\n        Project storage project = projects[_projectId];\\n        require(\\n            block.timestamp < project.deadline,\\n            \\\"Project funding period is over\\\"\\n        );\\n        require(msg.value > 0, \\\"Amount must be greater than 0\\\");\\n\\n        project.currentAmount += msg.value;\\n        ethContributions[_projectId][msg.sender] += msg.value;\\n\\n        if (ethContributions[_projectId][msg.sender] == msg.value) {\\n            // \\u65b0\\u589e\\u6295\\u8d44\\u8005\\n            projectInvestors[_projectId].push(msg.sender);\\n        }\\n        if (project.currentAmount >= project.goalAmount) {\\n            // \\u8fbe\\u5230\\u76ee\\u6807\\u91d1\\u989d\\n            project.completed = true;\\n        }\\n\\n        emit ProjectFunded(_projectId, msg.sender, msg.value, true);\\n    }\\n\\n    function updateProgress(\\n        uint256 _projectId,\\n        uint256 _progress,\\n        string calldata _details\\n    ) external {\\n        Project storage project = projects[_projectId];\\n        require(\\n            msg.sender == project.creator,\\n            \\\"Only project creator can update progress\\\"\\n        );\\n        require(\\n            _progress == 30 ||\\n                _progress == 50 ||\\n                _progress == 70 ||\\n                _progress == 100,\\n            \\\"Invalid progress value\\\"\\n        );\\n        require(\\n            _progress > project.currentProgress,\\n            \\\"Progress must be greater than current progress\\\"\\n        );\\n\\n        project.currentProgress = _progress;\\n        progressDetails[_projectId][_progress] = _details;\\n\\n        emit ProgressUpdated(_projectId, _progress, _details);\\n    }\\n\\n    function reviewProgress(\\n        uint256 _projectId,\\n        uint256 _progress,\\n        string calldata _comment,\\n        bool _approved\\n    ) external onlyInvestor(_projectId) {\\n        Project storage project = projects[_projectId];\\n        require(\\n            project.currentProgress == _progress,\\n            \\\"Progress does not match current project progress\\\"\\n        );\\n        require(\\n            project.currentAmount >= project.goalAmount,\\n            \\\"Project has not reached goal amount\\\"\\n        );\\n\\n        approvalComments[_projectId][_progress] = _comment;\\n\\n        if (_approved) {\\n            // \\u8ba1\\u7b97\\u5e76\\u53d1\\u653e\\u8d44\\u91d1\\n            distributeFunds(_projectId, _progress, project);\\n\\n            // \\u5206\\u914d\\u5956\\u52b1\\u7ed9\\u6295\\u8d44\\u4eba\\u548c\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\n            distributeRewards(_projectId, project);\\n        } else {\\n            project.currentProgress = _progress == 30\\n                ? 0\\n                : project.currentProgress - 20;\\n        }\\n\\n        emit ProgressReviewed(_projectId, _comment, _approved);\\n    }\\n\\n    function distributeFunds(\\n        uint256 _projectId,\\n        uint256 _progress,\\n        Project storage project\\n    ) internal {\\n        uint256 totalAmountToDistribute = (project.goalAmount * _progress) /\\n            100;\\n        uint256 amountToDistribute = totalAmountToDistribute -\\n            project.amountDistributed;\\n\\n        if (amountToDistribute > 0) {\\n            project.amountDistributed += amountToDistribute; // \\u66f4\\u65b0\\u5df2\\u53d1\\u653e\\u91d1\\u989d\\n            creatorEthBalances[project.creator] += amountToDistribute; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaETH\\u4f59\\u989d\\n            // \\u5b9e\\u9645\\u8f6c\\u79fbETH\\u5230\\u9879\\u76ee\\u53d1\\u8d77\\u4eba\\n            bool success = project.creator.send(amountToDistribute);\\n            require(success, \\\"ETH transfer failed\\\");\\n\\n            emit FundsDistributed(_projectId, amountToDistribute, false);\\n        }\\n    }\\n\\n    function distributeRewards(\\n        uint256 _projectId,\\n        Project storage project\\n    ) internal {\\n        uint256 reward = 1 * 10 ** 18; // \\u8bbe\\u7f6e\\u5956\\u52b1\\u6570\\u989d\\n        // token.approve(address(this), reward);\\n        address[] memory investors = projectInvestors[_projectId];\\n        for (uint256 i = 0; i < investors.length; i++) {\\n            address investor = investors[i];\\n            if (ethContributions[_projectId][investor] > 0) {\\n                require(\\n                    token.transfer(investor, reward),\\n                    \\\"Investor reward transfer failed\\\"\\n                );\\n            }\\n        }\\n        require(\\n            token.transfer(project.creator, reward),\\n            \\\"Creator reward transfer failed\\\"\\n        );\\n        creatorBalances[project.creator] += reward; // \\u66f4\\u65b0\\u53d1\\u8d77\\u4ebaERC20\\u4f59\\u989d\\n    }\\n\\n    function updateProject(\\n        uint256 _projectId,\\n        uint256 _newGoalAmount,\\n        uint256 _newDeadline\\n    ) external {\\n        Project storage project = projects[_projectId];\\n        require(\\n            msg.sender == project.creator,\\n            \\\"Only project creator can update\\\"\\n        );\\n        require(!project.completed, \\\"Project is already completed\\\");\\n\\n        if (_newGoalAmount > 0) {\\n            project.goalAmount = _newGoalAmount;\\n        }\\n        if (_newDeadline > block.timestamp) {\\n            project.deadline = _newDeadline;\\n        }\\n    }\\n\\n    function getProjectDetails(\\n        uint256 _projectId\\n    )\\n        external\\n        view\\n        returns (address, uint256, uint256, uint256, bool, uint256, uint256)\\n    {\\n        Project storage project = projects[_projectId];\\n        return (\\n            project.creator,\\n            project.goalAmount,\\n            project.currentAmount,\\n            project.deadline,\\n            project.completed,\\n            project.currentProgress,\\n            project.amountDistributed\\n        );\\n    }\\n\\n    function getPlatformBalance(\\n        address _user\\n    ) external view returns (uint256, uint256) {\\n        uint256 totalTokenBalance = 0;\\n        uint256 totalEthBalance = 0;\\n        for (uint256 i = 0; i < projectCount; i++) {\\n            totalTokenBalance += contributions[i][_user];\\n            totalEthBalance += ethContributions[i][_user];\\n        }\\n        return (totalTokenBalance, totalEthBalance);\\n    }\\n\\n    function getCreatorBalance(\\n        address _creator\\n    ) external view returns (uint256) {\\n        return creatorBalances[_creator];\\n    }\\n\\n    function getCreatorEthBalance(\\n        address _creator\\n    ) external view returns (uint256) {\\n        return creatorEthBalances[_creator];\\n    }\\n    function transferTokens(address to, uint256 value) external returns (bool) {\\n        return token.transfer(to, value);\\n    }\\n}\\n\",\"keccak256\":\"0xedb99586cd97d4391fdf17c328b2cda5732bb888a7136c77fa3bdf2c72ef3cfd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260006002553480156200001657600080fd5b5060405162003d7c38038062003d7c83398181016040528101906200003c9190620003b7565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b25760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a99190620003fa565b60405180910390fd5b620000c3816200011d60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200011633620001e160201b60201c565b5062000417565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001f16200027a60201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620002665760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200025d9190620003fa565b60405180910390fd5b62000277816200011d60201b60201c565b50565b6200028a6200031c60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620002b06200032460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16146200031a57620002dc6200031c60201b60201c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620003119190620003fa565b60405180910390fd5b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200037f8262000352565b9050919050565b620003918162000372565b81146200039d57600080fd5b50565b600081519050620003b18162000386565b92915050565b600060208284031215620003d057620003cf6200034d565b5b6000620003e084828501620003a0565b91505092915050565b620003f48162000372565b82525050565b6000602082019050620004116000830184620003e9565b92915050565b61395580620004276000396000f3fe60806040526004361061014b5760003560e01c80636a78c833116100b6578063b9b1060b1161006f578063b9b1060b146104ef578063bbbf146a1461052c578063bec3fa1714610555578063d5f2cf0514610592578063f2fde38b146105cf578063fc0c546a146105f85761014b565b80636a78c833146103e1578063715018a61461041e5780637a25f100146104355780638b44da951461045e5780638da5cb5b1461049b578063b93a5339146104c65761014b565b8063350d171711610108578063350d17171461029357806336fbad26146102d05780633d891f59146102fb5780635955eb15146103385780635b325968146103615780635f8439e31461039e5761014b565b8063056c29ee1461015057806309cf7ffc14610179578063107046bd146101b65780631b5d5f81146101fc5780632a782802146102185780633170ee1d14610255575b600080fd5b34801561015c57600080fd5b506101776004803603810190610172919061236b565b610623565b005b34801561018557600080fd5b506101a0600480360381019061019b9190612498565b610871565b6040516101ad91906124d4565b60405180910390f35b3480156101c257600080fd5b506101dd60048036038101906101d891906124ef565b6108ba565b6040516101f39a999897969594939291906125d7565b60405180910390f35b610216600480360381019061021191906124ef565b610ad3565b005b34801561022457600080fd5b5061023f600480360381019061023a9190612498565b610d44565b60405161024c91906124d4565b60405180910390f35b34801561026157600080fd5b5061027c60048036038101906102779190612498565b610d5c565b60405161028a929190612688565b60405180910390f35b34801561029f57600080fd5b506102ba60048036038101906102b591906126b1565b610e46565b6040516102c791906126f1565b60405180910390f35b3480156102dc57600080fd5b506102e5610ef3565b6040516102f291906124d4565b60405180910390f35b34801561030757600080fd5b50610322600480360381019061031d9190612713565b610ef9565b60405161032f91906124d4565b60405180910390f35b34801561034457600080fd5b5061035f600480360381019061035a9190612753565b610f1e565b005b34801561036d57600080fd5b5061038860048036038101906103839190612498565b611044565b60405161039591906124d4565b60405180910390f35b3480156103aa57600080fd5b506103c560048036038101906103c091906124ef565b61105c565b6040516103d897969594939291906127b5565b60405180910390f35b3480156103ed57600080fd5b5061040860048036038101906104039190612498565b6110e7565b60405161041591906124d4565b60405180910390f35b34801561042a57600080fd5b50610433611130565b005b34801561044157600080fd5b5061045c60048036038101906104579190612884565b611144565b005b34801561046a57600080fd5b50610485600480360381019061048091906126b1565b611317565b60405161049291906128f8565b60405180910390f35b3480156104a757600080fd5b506104b0611365565b6040516104bd91906128f8565b60405180910390f35b3480156104d257600080fd5b506104ed60048036038101906104e8919061293f565b61138e565b005b3480156104fb57600080fd5b50610516600480360381019061051191906126b1565b6115e8565b60405161052391906126f1565b60405180910390f35b34801561053857600080fd5b50610553600480360381019061054e91906126b1565b611695565b005b34801561056157600080fd5b5061057c600480360381019061057791906129c7565b6119bb565b6040516105899190612a07565b60405180910390f35b34801561059e57600080fd5b506105b960048036038101906105b49190612713565b611a65565b6040516105c691906124d4565b60405180910390f35b3480156105db57600080fd5b506105f660048036038101906105f19190612498565b611a8a565b005b34801561060457600080fd5b5061060d611b10565b60405161061a9190612a81565b60405180910390f35b60008211610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90612b0e565b60405180910390fd5b4281116106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90612b7a565b60405180910390fd5b6040518061014001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018481526020018381526020016000815260200160008152602001828152602001600015158152602001600081525060036000600254815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161077b9190612d9c565b5060408201518160020190816107919190612d9c565b5060608201518160030190816107a79190612d9c565b506080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080160006101000a81548160ff02191690831515021790555061012082015181600901559050503373ffffffffffffffffffffffffffffffffffffffff166002547fb5d890eb2df709d2f732ed81f328b444e49c1618ed8d64c53c0a040ec4040e1e848460405161084a929190612688565b60405180910390a36002600081548092919061086590612e9d565b91905055505050505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461090390612bc9565b80601f016020809104026020016040519081016040528092919081815260200182805461092f90612bc9565b801561097c5780601f106109515761010080835404028352916020019161097c565b820191906000526020600020905b81548152906001019060200180831161095f57829003601f168201915b50505050509080600201805461099190612bc9565b80601f01602080910402602001604051908101604052809291908181526020018280546109bd90612bc9565b8015610a0a5780601f106109df57610100808354040283529160200191610a0a565b820191906000526020600020905b8154815290600101906020018083116109ed57829003601f168201915b505050505090806003018054610a1f90612bc9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4b90612bc9565b8015610a985780601f10610a6d57610100808354040283529160200191610a98565b820191906000526020600020905b815481529060010190602001808311610a7b57829003601f168201915b5050505050908060040154908060050154908060060154908060070154908060080160009054906101000a900460ff1690806009015490508a565b600060036000838152602001908152602001600020905080600701544210610b30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2790612f31565b60405180910390fd5b60003411610b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6a90612f9d565b60405180910390fd5b34816005016000828254610b879190612fbd565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bee9190612fbd565b92505081905550346005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610cc157600a6000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060040154816005015410610cee5760018160080160006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff16827f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f346001604051610d38929190612ff1565b60405180910390a35050565b60086020528060005260406000206000915090505481565b60008060008060005b600254811015610e38576004600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610dcb9190612fbd565b92506005600082815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482610e299190612fbd565b91508080600101915050610d65565b508181935093505050915091565b6007602052816000526040600020602052806000526040600020600091509150508054610e7290612bc9565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9e90612bc9565b8015610eeb5780601f10610ec057610100808354040283529160200191610eeb565b820191906000526020600020905b815481529060010190602001808311610ece57829003601f168201915b505050505081565b60025481565b6004602052816000526040600020602052806000526040600020600091509150505481565b60006003600085815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbe90613066565b60405180910390fd5b8060080160009054906101000a900460ff1615611019576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611010906130d2565b60405180910390fd5b600083111561102c578281600401819055505b4282111561103e578181600701819055505b50505050565b60096020528060005260406000206000915090505481565b600080600080600080600080600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160040154826005015483600701548460080160009054906101000a900460ff1685600901548660060154975097509750975097509750975050919395979092949650565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b611138611b36565b6111426000611bbd565b565b60006003600086815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e490613164565b60405180910390fd5b601e8414806111fc5750603284145b806112075750604684145b806112125750606484145b611251576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611248906131d0565b60405180910390fd5b80600901548411611297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128e90613262565b60405180910390fd5b838160090181905550828260066000888152602001908152602001600020600087815260200190815260200160002091826112d392919061328d565b50847f600f24eb98aa4205c376079c1cc9195e841a77574da91b88a61cfe6c612b56c18585856040516113089392919061338a565b60405180910390a25050505050565b600a602052816000526040600020818154811061133357600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8460006005600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054118061143e575060006004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b61147d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147490613408565b60405180910390fd5b6000600360008881526020019081526020016000209050858160090154146114da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d19061349a565b60405180910390fd5b806004015481600501541015611525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151c9061352c565b60405180910390fd5b8484600760008a81526020019081526020016000206000898152602001908152602001600020918261155892919061328d565b5082156115795761156a878783611c81565b6115748782611e34565b6115a3565b601e86146115975760148160090154611592919061354c565b61159a565b60005b81600901819055505b867fc5e6a549ac2c3754eb5455486bb1b8f04d2ae3e444764d35909d59537e4a51a08686866040516115d793929190613580565b60405180910390a250505050505050565b600660205281600052604060002060205280600052604060002060009150915050805461161490612bc9565b80601f016020809104026020016040519081016040528092919081815260200182805461164090612bc9565b801561168d5780601f106116625761010080835404028352916020019161168d565b820191906000526020600020905b81548152906001019060200180831161167057829003601f168201915b505050505081565b6000600360008481526020019081526020016000209050806007015442106116f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e990612f31565b60405180910390fd5b60008211611735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172c90612f9d565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401611794939291906135b2565b6020604051808303816000875af11580156117b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d791906135fe565b611816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180d90613677565b60405180910390fd5b8181600501600082825461182a9190612fbd565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118919190612fbd565b92505081905550816004600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540361196457600a6000848152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3373ffffffffffffffffffffffffffffffffffffffff16837f296213327784aed1db3e4aef381db3aa91efdaf000bf7527e0de40be86a21f9f8460006040516119ae929190612ff1565b60405180910390a3505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611a1a929190613697565b6020604051808303816000875af1158015611a39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5d91906135fe565b905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b611a92611b36565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b045760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611afb91906128f8565b60405180910390fd5b611b0d81611bbd565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611b3e6121d3565b73ffffffffffffffffffffffffffffffffffffffff16611b5c611365565b73ffffffffffffffffffffffffffffffffffffffff1614611bbb57611b7f6121d3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611bb291906128f8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006064838360040154611c9591906136c0565b611c9f9190613731565b90506000826006015482611cb3919061354c565b90506000811115611e2d5780836006016000828254611cd29190612fbd565b9250508190555080600960008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611d4c9190612fbd565b9250508190555060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080611df0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de7906137ae565b60405180910390fd5b857ff76e1f2eb07b2469e4d234c31a9e74911c283b015d12d264993fbb5544bb1b2e836000604051611e23929190612ff1565b60405180910390a2505b5050505050565b6000670de0b6b3a764000090506000600a6000858152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ed657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611e8c575b5050505050905060005b815181101561204f576000828281518110611efe57611efd6137ce565b5b6020026020010151905060006005600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561204157600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82866040518363ffffffff1660e01b8152600401611fbe929190613697565b6020604051808303816000875af1158015611fdd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200191906135fe565b612040576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203790613849565b60405180910390fd5b5b508080600101915050611ee0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016120d192919061388a565b6020604051808303816000875af11580156120f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211491906135fe565b612153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161214a906138ff565b60405180910390fd5b81600860008560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121c69190612fbd565b9250508190555050505050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612242826121f9565b810181811067ffffffffffffffff821117156122615761226061220a565b5b80604052505050565b60006122746121db565b90506122808282612239565b919050565b600067ffffffffffffffff8211156122a05761229f61220a565b5b6122a9826121f9565b9050602081019050919050565b82818337600083830152505050565b60006122d86122d384612285565b61226a565b9050828152602081018484840111156122f4576122f36121f4565b5b6122ff8482856122b6565b509392505050565b600082601f83011261231c5761231b6121ef565b5b813561232c8482602086016122c5565b91505092915050565b6000819050919050565b61234881612335565b811461235357600080fd5b50565b6000813590506123658161233f565b92915050565b600080600080600060a08688031215612387576123866121e5565b5b600086013567ffffffffffffffff8111156123a5576123a46121ea565b5b6123b188828901612307565b955050602086013567ffffffffffffffff8111156123d2576123d16121ea565b5b6123de88828901612307565b945050604086013567ffffffffffffffff8111156123ff576123fe6121ea565b5b61240b88828901612307565b935050606061241c88828901612356565b925050608061242d88828901612356565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124658261243a565b9050919050565b6124758161245a565b811461248057600080fd5b50565b6000813590506124928161246c565b92915050565b6000602082840312156124ae576124ad6121e5565b5b60006124bc84828501612483565b91505092915050565b6124ce81612335565b82525050565b60006020820190506124e960008301846124c5565b92915050565b600060208284031215612505576125046121e5565b5b600061251384828501612356565b91505092915050565b60006125278261243a565b9050919050565b6125378161251c565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561257757808201518184015260208101905061255c565b60008484015250505050565b600061258e8261253d565b6125988185612548565b93506125a8818560208601612559565b6125b1816121f9565b840191505092915050565b60008115159050919050565b6125d1816125bc565b82525050565b6000610140820190506125ed600083018d61252e565b81810360208301526125ff818c612583565b90508181036040830152612613818b612583565b90508181036060830152612627818a612583565b905061263660808301896124c5565b61264360a08301886124c5565b61265060c08301876124c5565b61265d60e08301866124c5565b61266b6101008301856125c8565b6126796101208301846124c5565b9b9a5050505050505050505050565b600060408201905061269d60008301856124c5565b6126aa60208301846124c5565b9392505050565b600080604083850312156126c8576126c76121e5565b5b60006126d685828601612356565b92505060206126e785828601612356565b9150509250929050565b6000602082019050818103600083015261270b8184612583565b905092915050565b6000806040838503121561272a576127296121e5565b5b600061273885828601612356565b925050602061274985828601612483565b9150509250929050565b60008060006060848603121561276c5761276b6121e5565b5b600061277a86828701612356565b935050602061278b86828701612356565b925050604061279c86828701612356565b9150509250925092565b6127af8161245a565b82525050565b600060e0820190506127ca600083018a6127a6565b6127d760208301896124c5565b6127e460408301886124c5565b6127f160608301876124c5565b6127fe60808301866125c8565b61280b60a08301856124c5565b61281860c08301846124c5565b98975050505050505050565b600080fd5b600080fd5b60008083601f840112612844576128436121ef565b5b8235905067ffffffffffffffff81111561286157612860612824565b5b60208301915083600182028301111561287d5761287c612829565b5b9250929050565b6000806000806060858703121561289e5761289d6121e5565b5b60006128ac87828801612356565b94505060206128bd87828801612356565b935050604085013567ffffffffffffffff8111156128de576128dd6121ea565b5b6128ea8782880161282e565b925092505092959194509250565b600060208201905061290d60008301846127a6565b92915050565b61291c816125bc565b811461292757600080fd5b50565b60008135905061293981612913565b92915050565b60008060008060006080868803121561295b5761295a6121e5565b5b600061296988828901612356565b955050602061297a88828901612356565b945050604086013567ffffffffffffffff81111561299b5761299a6121ea565b5b6129a78882890161282e565b935093505060606129ba8882890161292a565b9150509295509295909350565b600080604083850312156129de576129dd6121e5565b5b60006129ec85828601612483565b92505060206129fd85828601612356565b9150509250929050565b6000602082019050612a1c60008301846125c8565b92915050565b6000819050919050565b6000612a47612a42612a3d8461243a565b612a22565b61243a565b9050919050565b6000612a5982612a2c565b9050919050565b6000612a6b82612a4e565b9050919050565b612a7b81612a60565b82525050565b6000602082019050612a966000830184612a72565b92915050565b7f476f616c20616d6f756e74206d7573742062652067726561746572207468616e60008201527f2030000000000000000000000000000000000000000000000000000000000000602082015250565b6000612af8602283612548565b9150612b0382612a9c565b604082019050919050565b60006020820190508181036000830152612b2781612aeb565b9050919050565b7f446561646c696e65206d75737420626520696e20746865206675747572650000600082015250565b6000612b64601e83612548565b9150612b6f82612b2e565b602082019050919050565b60006020820190508181036000830152612b9381612b57565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612be157607f821691505b602082108103612bf457612bf3612b9a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612c5c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c1f565b612c668683612c1f565b95508019841693508086168417925050509392505050565b6000612c99612c94612c8f84612335565b612a22565b612335565b9050919050565b6000819050919050565b612cb383612c7e565b612cc7612cbf82612ca0565b848454612c2c565b825550505050565b600090565b612cdc612ccf565b612ce7818484612caa565b505050565b5b81811015612d0b57612d00600082612cd4565b600181019050612ced565b5050565b601f821115612d5057612d2181612bfa565b612d2a84612c0f565b81016020851015612d39578190505b612d4d612d4585612c0f565b830182612cec565b50505b505050565b600082821c905092915050565b6000612d7360001984600802612d55565b1980831691505092915050565b6000612d8c8383612d62565b9150826002028217905092915050565b612da58261253d565b67ffffffffffffffff811115612dbe57612dbd61220a565b5b612dc88254612bc9565b612dd3828285612d0f565b600060209050601f831160018114612e065760008415612df4578287015190505b612dfe8582612d80565b865550612e66565b601f198416612e1486612bfa565b60005b82811015612e3c57848901518255600182019150602085019450602081019050612e17565b86831015612e595784890151612e55601f891682612d62565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ea882612335565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612eda57612ed9612e6e565b5b600182019050919050565b7f50726f6a6563742066756e64696e6720706572696f64206973206f7665720000600082015250565b6000612f1b601e83612548565b9150612f2682612ee5565b602082019050919050565b60006020820190508181036000830152612f4a81612f0e565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b6000612f87601d83612548565b9150612f9282612f51565b602082019050919050565b60006020820190508181036000830152612fb681612f7a565b9050919050565b6000612fc882612335565b9150612fd383612335565b9250828201905080821115612feb57612fea612e6e565b5b92915050565b600060408201905061300660008301856124c5565b61301360208301846125c8565b9392505050565b7f4f6e6c792070726f6a6563742063726561746f722063616e2075706461746500600082015250565b6000613050601f83612548565b915061305b8261301a565b602082019050919050565b6000602082019050818103600083015261307f81613043565b9050919050565b7f50726f6a65637420697320616c726561647920636f6d706c6574656400000000600082015250565b60006130bc601c83612548565b91506130c782613086565b602082019050919050565b600060208201905081810360008301526130eb816130af565b9050919050565b7f4f6e6c792070726f6a6563742063726561746f722063616e207570646174652060008201527f70726f6772657373000000000000000000000000000000000000000000000000602082015250565b600061314e602883612548565b9150613159826130f2565b604082019050919050565b6000602082019050818103600083015261317d81613141565b9050919050565b7f496e76616c69642070726f67726573732076616c756500000000000000000000600082015250565b60006131ba601683612548565b91506131c582613184565b602082019050919050565b600060208201905081810360008301526131e9816131ad565b9050919050565b7f50726f6772657373206d7573742062652067726561746572207468616e20637560008201527f7272656e742070726f6772657373000000000000000000000000000000000000602082015250565b600061324c602e83612548565b9150613257826131f0565b604082019050919050565b6000602082019050818103600083015261327b8161323f565b9050919050565b600082905092915050565b6132978383613282565b67ffffffffffffffff8111156132b0576132af61220a565b5b6132ba8254612bc9565b6132c5828285612d0f565b6000601f8311600181146132f457600084156132e2578287013590505b6132ec8582612d80565b865550613354565b601f19841661330286612bfa565b60005b8281101561332a57848901358255600182019150602085019450602081019050613305565b868310156133475784890135613343601f891682612d62565b8355505b6001600288020188555050505b50505050505050565b60006133698385612548565b93506133768385846122b6565b61337f836121f9565b840190509392505050565b600060408201905061339f60008301866124c5565b81810360208301526133b281848661335d565b9050949350505050565b7f43616c6c6572206973206e6f7420616e20696e766573746f7200000000000000600082015250565b60006133f2601983612548565b91506133fd826133bc565b602082019050919050565b60006020820190508181036000830152613421816133e5565b9050919050565b7f50726f677265737320646f6573206e6f74206d617463682063757272656e742060008201527f70726f6a6563742070726f677265737300000000000000000000000000000000602082015250565b6000613484603083612548565b915061348f82613428565b604082019050919050565b600060208201905081810360008301526134b381613477565b9050919050565b7f50726f6a65637420686173206e6f74207265616368656420676f616c20616d6f60008201527f756e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613516602383612548565b9150613521826134ba565b604082019050919050565b6000602082019050818103600083015261354581613509565b9050919050565b600061355782612335565b915061356283612335565b925082820390508181111561357a57613579612e6e565b5b92915050565b6000604082019050818103600083015261359b81858761335d565b90506135aa60208301846125c8565b949350505050565b60006060820190506135c760008301866127a6565b6135d460208301856127a6565b6135e160408301846124c5565b949350505050565b6000815190506135f881612913565b92915050565b600060208284031215613614576136136121e5565b5b6000613622848285016135e9565b91505092915050565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b6000613661601583612548565b915061366c8261362b565b602082019050919050565b6000602082019050818103600083015261369081613654565b9050919050565b60006040820190506136ac60008301856127a6565b6136b960208301846124c5565b9392505050565b60006136cb82612335565b91506136d683612335565b92508282026136e481612335565b915082820484148315176136fb576136fa612e6e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061373c82612335565b915061374783612335565b92508261375757613756613702565b5b828204905092915050565b7f455448207472616e73666572206661696c656400000000000000000000000000600082015250565b6000613798601383612548565b91506137a382613762565b602082019050919050565b600060208201905081810360008301526137c78161378b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e766573746f7220726577617264207472616e73666572206661696c656400600082015250565b6000613833601f83612548565b915061383e826137fd565b602082019050919050565b6000602082019050818103600083015261386281613826565b9050919050565b600061387482612a4e565b9050919050565b61388481613869565b82525050565b600060408201905061389f600083018561387b565b6138ac60208301846124c5565b9392505050565b7f43726561746f7220726577617264207472616e73666572206661696c65640000600082015250565b60006138e9601e83612548565b91506138f4826138b3565b602082019050919050565b60006020820190508181036000830152613918816138dc565b905091905056fea264697066735822122021238ae3a2b19e76704e3d3a4f934c4fb84774ed5c1ba71c5b07a7566bfb4d9064736f6c63430008180033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 285,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 288,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 293,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projects",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(Project)282_storage)"
      },
      {
        "astId": 299,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "contributions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 305,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "ethContributions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 311,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "progressDetails",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 317,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "approvalComments",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))"
      },
      {
        "astId": 321,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorBalances",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "creatorEthBalances",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/SmartFrogFund.sol:FrogFund",
        "label": "projectInvestors",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => string))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_string_storage)"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_struct(Project)282_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FrogFund.Project)",
        "numberOfBytes": "32",
        "value": "t_struct(Project)282_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Project)282_storage": {
        "encoding": "inplace",
        "label": "struct FrogFund.Project",
        "members": [
          {
            "astId": 263,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "creator",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 265,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "link",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 271,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "goalAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 273,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 275,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "amountDistributed",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 277,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "deadline",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 279,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "completed",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 281,
            "contract": "contracts/SmartFrogFund.sol:FrogFund",
            "label": "currentProgress",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}